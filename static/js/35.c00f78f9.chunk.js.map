{"version":3,"sources":["components/Typography.js","components/Page.js","api/states.js","pages/TruckExpensesPage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","process","length","map","_ref2","index","name","active","key","__webpack_exports__","data","abbreviation","TruckExpensesPage","props","_this","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","firstUpper","str","string","toLowerCase","charAt","toUpperCase","slice","handleFromDateInput","event","v","target","value","setState","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","state","from_date","handleToDateInput","to_date","handleTruckInput","truck","handleSaveChanges","preload","findExpensesByTruck","xtoken","then","response","status","msg","message","error","forceUpdate","catch","console","log","downloadFile","trucks","AsyncStorage","getItem","conf","secret","results","obje_results","JSON","parse","user","token","findTrucks","respError","_this2","columns","options","display","customBodyRender","tableMeta","updateValue","react__WEBPACK_IMPORTED_MODULE_7___default","reactstrap__WEBPACK_IMPORTED_MODULE_9__","react_moment__WEBPACK_IMPORTED_MODULE_8___default","format","filter","selectableRows","selectableRowsOnClick","filterType","responsive","draggableColumns","enabled","rowsPerPage","selectToolbarPlacement","downloadOptions","filename","separator","filterOptions","useDisplayedColumnsOnly","useDisplayedRowsOnly","onDownload","buildHead","buildBody","data2","concat","trim","onRowSelectionChange","currentRowsSelected","allRows","rowsSelected","onRowsDelete","rowsDeleted","onChangePage","numberRows","onSearchChange","searchText","onColumnSortChange","column","direction","onViewColumnsChange","action","onFilterChange","filters","onCellClick","cellIndex","rowIndex","onRowClick","rowData","rowState","components_Page__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","xl","lg","md","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","components_PageSpinner__WEBPACK_IMPORTED_MODULE_21__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","color","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","for","reactstrap__WEBPACK_IMPORTED_MODULE_18__","onChange","defaultValue","disabled","stt","idx","id","make","number","placeholder","check","row","sm","size","offset","reactstrap__WEBPACK_IMPORTED_MODULE_19__","onClick","mui_datatables__WEBPACK_IMPORTED_MODULE_25___default","item","glabel","tlabel","amount","description","startdate","enddate","frequency","limit","city","misc_amount","created_at","React","Component"],"mappings":"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","file":"static/js/35.c00f78f9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>{process.env.REACT_APP_NAME}</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","export default {\n    data:[\n        {\n          name: 'Alabama',\n          abbreviation: 'AL'\n        },\n        {\n          name: 'Alaska',\n          abbreviation: 'AK'\n        },\n        {\n          name: 'American Samoa',\n          abbreviation: 'AS'\n        },\n        {\n          name: 'Arizona',\n          abbreviation: 'AZ'\n        },\n        {\n          name: 'Arkansas',\n          abbreviation: 'AR'\n        },\n        {\n          name: 'California',\n          abbreviation: 'CA'\n        },\n        {\n          name: 'Colorado',\n          abbreviation: 'CO'\n        },\n        {\n          name: 'Connecticut',\n          abbreviation: 'CT'\n        },\n        {\n          name: 'Delaware',\n          abbreviation: 'DE'\n        },\n        {\n          name: 'District Of Columbia',\n          abbreviation: 'DC'\n        },\n        {\n          name: 'Federated States Of Micronesia',\n          abbreviation: 'FM'\n        },\n        {\n          name: 'Florida',\n          abbreviation: 'FL'\n        },\n        {\n          name: 'Georgia',\n          abbreviation: 'GA'\n        },\n        {\n          name: 'Guam',\n          abbreviation: 'GU'\n        },\n        {\n          name: 'Hawaii',\n          abbreviation: 'HI'\n        },\n        {\n          name: 'Idaho',\n          abbreviation: 'ID'\n        },\n        {\n          name: 'Illinois',\n          abbreviation: 'IL'\n        },\n        {\n          name: 'Indiana',\n          abbreviation: 'IN'\n        },\n        {\n          name: 'Iowa',\n          abbreviation: 'IA'\n        },\n        {\n          name: 'Kansas',\n          abbreviation: 'KS'\n        },\n        {\n          name: 'Kentucky',\n          abbreviation: 'KY'\n        },\n        {\n          name: 'Louisiana',\n          abbreviation: 'LA'\n        },\n        {\n          name: 'Maine',\n          abbreviation: 'ME'\n        },\n        {\n          name: 'Marshall Islands',\n          abbreviation: 'MH'\n        },\n        {\n          name: 'Maryland',\n          abbreviation: 'MD'\n        },\n        {\n          name: 'Massachusetts',\n          abbreviation: 'MA'\n        },\n        {\n          name: 'Michigan',\n          abbreviation: 'MI'\n        },\n        {\n          name: 'Minnesota',\n          abbreviation: 'MN'\n        },\n        {\n          name: 'Mississippi',\n          abbreviation: 'MS'\n        },\n        {\n          name: 'Missouri',\n          abbreviation: 'MO'\n        },\n        {\n          name: 'Montana',\n          abbreviation: 'MT'\n        },\n        {\n          name: 'Nebraska',\n          abbreviation: 'NE'\n        },\n        {\n          name: 'Nevada',\n          abbreviation: 'NV'\n        },\n        {\n          name: 'New Hampshire',\n          abbreviation: 'NH'\n        },\n        {\n          name: 'New Jersey',\n          abbreviation: 'NJ'\n        },\n        {\n          name: 'New Mexico',\n          abbreviation: 'NM'\n        },\n        {\n          name: 'New York',\n          abbreviation: 'NY'\n        },\n        {\n          name: 'North Carolina',\n          abbreviation: 'NC'\n        },\n        {\n          name: 'North Dakota',\n          abbreviation: 'ND'\n        },\n        {\n          name: 'Northern Mariana Islands',\n          abbreviation: 'MP'\n        },\n        {\n          name: 'Ohio',\n          abbreviation: 'OH'\n        },\n        {\n          name: 'Oklahoma',\n          abbreviation: 'OK'\n        },\n        {\n          name: 'Oregon',\n          abbreviation: 'OR'\n        },\n        {\n          name: 'Palau',\n          abbreviation: 'PW'\n        },\n        {\n          name: 'Pennsylvania',\n          abbreviation: 'PA'\n        },\n        {\n          name: 'Puerto Rico',\n          abbreviation: 'PR'\n        },\n        {\n          name: 'Rhode Island',\n          abbreviation: 'RI'\n        },\n        {\n          name: 'South Carolina',\n          abbreviation: 'SC'\n        },\n        {\n          name: 'South Dakota',\n          abbreviation: 'SD'\n        },\n        {\n          name: 'Tennessee',\n          abbreviation: 'TN'\n        },\n        {\n          name: 'Texas',\n          abbreviation: 'TX'\n        },\n        {\n          name: 'Utah',\n          abbreviation: 'UT'\n        },\n        {\n          name: 'Vermont',\n          abbreviation: 'VT'\n        },\n        {\n          name: 'Virgin Islands',\n          abbreviation: 'VI'\n        },\n        {\n          name: 'Virginia',\n          abbreviation: 'VA'\n        },\n        {\n          name: 'Washington',\n          abbreviation: 'WA'\n        },\n        {\n          name: 'West Virginia',\n          abbreviation: 'WV'\n        },\n        {\n          name: 'Wisconsin',\n          abbreviation: 'WI'\n        },\n        {\n          name: 'Wyoming',\n          abbreviation: 'WY'\n        }\n      ]\n}","import Page from 'components/Page';\nimport React from 'react';\nimport Moment from 'react-moment';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormFeedback,\n  FormGroup,\n  FormText,\n  Input,\n  Label,\n  Row,\n  Alert,\n  Table,\n} from 'reactstrap';\nimport states from \"../api/states\";\nimport PageSpinner from 'components/PageSpinner';\nimport { findExpensesByTruck, findTrucks,} from \"../api/api\";\nimport AsyncStorage from '@callstack/async-storage';\nimport conf from \"../api/config\";\nimport MUIDataTable from \"mui-datatables\";\nclass TruckExpensesPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            truck : 'nn',\n            from_date: '',\n            to_date: '',\n            xtoken:'',\n            msg: '',\n            error: '',\n            downloadFile:true,\n            preload:false,\n            data: [],\n            trucks:[],\n        };\n        AsyncStorage.getItem(conf.secret)\n        .then((results) => {\n          if( results !== null )\n          {\n            let obje_results = JSON.parse(results);\n            this.setState({\n              ...this.state,\n              xtoken : obje_results.user.token,\n            });\n            findTrucks(obje_results.user.token).then((response) => {\n                this.setState({\n                    ...this.state,\n                    trucks:response.data,\n                });\n            }).catch((respError) => {});\n          }\n        })\n        .catch((error) => {\n          console.log('storage error', error);\n        });\n    }\n    componentDidMount() {\n    }\n\n    firstUpper = (str) => {\n        let string = str.toLowerCase();\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    handleFromDateInput = (event) => {\n      const v = event.target.value;\n      this.setState({...this.state, from_date: v,});\n    }\n    handleToDateInput = (event) => {\n      const v = event.target.value;\n      this.setState({...this.state, to_date: v,});\n    }\n    handleTruckInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, truck: v,});\n    }\n    handleSaveChanges = () => {\n      this.setState({...this.state, preload:true});\n      // console.log('this state', this.state);\n      findExpensesByTruck(this.state.xtoken, this.state, this.state.truck)\n      .then((response) => {\n          // console.log('exp response', response);\n          if( response.status === 200)\n          {\n              this.setState({\n                  ...this.state,\n                  msg: response.message,\n                  data: response.data,\n                  preload:false,\n                  error: '',\n              });\n              this.forceUpdate();\n          }\n          else\n          {\n              this.setState({\n                  ...this.state,\n                  error: response.message,\n                  preload:false,\n                  msg: '',\n              });\n          }\n      })\n      .catch((error) => {\n          this.setState({\n              ...this.state,\n              error: 'Connection error occured',\n              preload:false,\n          });\n          console.log('error', error);\n      });\n    }\n    render() {\n        const columns = [\n            {\n              name: 'Id',\n              options: {\n                display: false\n              }\n            },\n            {\n                name: 'Gid',\n                options: {\n                  display: 'excluded',\n                }\n            },\n            {\n                name: 'Tid',\n                options: {\n                  display: 'excluded',\n                }\n            },\n            'Group',\n            'Truck',\n            'Amount',\n            {\n              name: 'Description',\n              options: {\n                display: false\n              }\n            },\n            {\n              name: 'Start Date',\n              options: {\n                display:true,\n                customBodyRender: (value, tableMeta, updateValue) => (\n                    <Label>{value}</Label>\n                )\n              }\n            },\n            {\n              name: 'End Date',\n              options: {\n                display: false,\n                customBodyRender: (value, tableMeta, updateValue) => (\n                    <Label>{value}</Label>\n                )\n              },\n            },\n            {\n              name: 'Frequency',\n              options: {\n                display: true,\n                customBodyRender: (value, tableMeta, updateValue) => (\n                    <Label>{value}</Label>\n                )\n              },\n            },\n            {\n              name: 'Limit',\n              options: {\n                display: true,\n              },\n            },\n            {\n              name: 'City',\n              options: {\n                display: true,\n              },\n            },\n            {\n                name: 'State',\n                options: {\n                    display: true,\n                },\n            },\n            {\n                name: 'Msc. Amount',\n                options: {\n                    display: true,\n                },\n            },\n            {\n              name: 'Date Posted',\n              options: {\n                  display: true,\n                  customBodyRender: (value, tableMeta, updateValue) => (\n                    <Moment format=\"YYYY/MM/DD\">{value}</Moment>\n                  )\n              },\n          },\n        ];\n\n        const data2 = () => {\n          let rtn = [];\n          this.state.data.map(item => {\n            rtn.push([\n              item.id,\n              item.type,\n              item.truck,\n              item.glabel,\n              item.tlabel,\n              item.amount,\n              item.description,\n              item.startdate,\n              item.enddate,\n              item.frequency,\n              item.limit,\n              item.city,\n              item.state,\n              item.misc_amount,\n              item.created_at,\n            ]);\n          });\n          return rtn;\n        }\n      \n        const options = {\n            filter: true,\n            selectableRows: 'none',\n            selectableRowsOnClick:true,\n            filterType: 'dropdown',\n            responsive: 'vertical',\n            draggableColumns: {\n              enabled: true\n            },\n            rowsPerPage: 5,\n            selectToolbarPlacement: 'replace',\n            downloadOptions: {\n                filename: 'truck-expenses-excel-format.csv',\n                separator: ';',\n                filterOptions: {\n                  useDisplayedColumnsOnly: true,\n                  useDisplayedRowsOnly: true,\n                }\n            },\n            onDownload: (buildHead, buildBody, columns, data2) => {\n              if (this.state.downloadFile) {\n                let val= `${buildHead(columns)}${buildBody(data2)}`.trim();\n                return val;\n              }\n      \n              return false;\n            },\n            onRowSelectionChange: (currentRowsSelected, allRows, rowsSelected) => {\n              // console.log('currentRowsSelected', currentRowsSelected);\n            },\n            onRowsDelete: rowsDeleted => {\n              // console.log(rowsDeleted, 'were deleted!');\n            },\n            onChangePage: numberRows => {\n              // console.log(numberRows);\n            },\n            onSearchChange: searchText => {\n              // console.log(searchText);\n            },\n            onColumnSortChange: (column, direction) => {\n              // console.log(column, direction);\n            },\n            onViewColumnsChange: (column, action) => {\n              // console.log(column, action);\n            },\n            onFilterChange: (column, filters) => {\n              // console.log(column, filters);\n            },\n            onCellClick: (cellIndex, rowIndex) => {\n              // console.log(cellIndex, rowIndex);\n            },\n            onRowClick: (rowData, rowState) => {\n              // console.log(rowData, rowState);\n            },\n        };\n      return (\n        <Page title=\"Truck expenses\" breadcrumbs={[{ name: 'Expenses', active: true }]}>\n          <Row>\n            <Col xl={12} lg={12} md={12}>\n              <Card>\n                <CardHeader>\n                    Truck Expenses\n                    {this.state.preload && (<PageSpinner/>)}\n                </CardHeader>\n                {this.state.error.length > 0 && (\n                    <Alert color=\"danger\">{this.state.error}</Alert>\n                )}\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xl={3} lg={12} md={12}>\n              <Card>\n                <CardBody>\n                  <Form>\n                    <FormGroup>\n                      <Label for=\"exampleSelect\">Choose truck*</Label>\n                      <Input onChange={this.handleTruckInput} value={this.state.truck} defaultValue={this.state.truck} type=\"select\" name=\"truck\">\n                        <option value=\"nn\" disabled={true}>Select truck</option>\n                        {\n                            this.state.trucks.map((stt, idx) => (\n                                <option key={idx} value={stt.id}>{this.firstUpper(stt.make) + \" - \" + stt.number}</option>\n                            ))\n                        }\n                      </Input>\n                    </FormGroup>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl={3} lg={12} md={12}>\n              <Card>\n                <CardBody>\n                  <Form>\n                    <FormGroup>\n                      <Label for=\"exampleSelect\">Date from*</Label>\n                      <Input onChange={this.handleFromDateInput}\n                        type=\"date\" \n                        value={this.state.from_date}\n                        name=\"fromdate\"\n                        placeholder=\"\"\n                      />\n                    </FormGroup>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl={3} lg={12} md={12}>\n              <Card>\n                <CardBody>\n                  <Form>\n                    <FormGroup>\n                      <Label for=\"exampleSelect\">Date to*</Label>\n                      <Input onChange={this.handleToDateInput}\n                        type=\"date\" \n                        value={this.state.to_date}\n                        name=\"todate\"\n                        placeholder=\"\"\n                      />\n                    </FormGroup>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl={3} lg={12} md={12}>\n              <Card>\n                <CardBody>\n                  <Form>\n                    <FormGroup check row>\n                      <Col sm={{ size: 10, offset: 2 }}>\n                        <Button type=\"button\" onClick={this.handleSaveChanges}>Run search</Button>\n                      </Col>\n                    </FormGroup>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n        </Row>\n\n          <Row>\n            <Col xl={12} lg={12} md={12}>\n              <Card>\n                <CardBody>\n                    <MUIDataTable title={'Truck expenses'}\n                    data={this.state.data.map(item => {\n                      return [\n                        item.id,\n                        item.type,\n                        item.truck,\n                        item.glabel,\n                        item.tlabel,\n                        item.amount,\n                        item.description,\n                        item.startdate,\n                        item.enddate,\n                        item.frequency,\n                        item.limit,\n                        item.city,\n                        item.state,\n                        item.misc_amount,\n                        item.created_at,\n                      ]\n                    })} columns={columns} options={options} />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n    \n        </Page>\n      );\n    }\n}\nexport default TruckExpensesPage;\n"],"sourceRoot":""}