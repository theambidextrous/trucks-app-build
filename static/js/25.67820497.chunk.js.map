{"version":3,"sources":["components/Typography.js","components/Page.js","api/states.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","pages/ProfilePage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","process","length","map","_ref2","index","name","active","key","__webpack_exports__","data","abbreviation","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","listTag","string","listClassName","cssModule","object","node","aria-label","Breadcrumb","props","ListTag","label","attributes","listClasses","bool","BreadcrumbItem","aria-current","undefined","ProfilePage","_this","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","isValidEmailAddress","email","test","handlePasswordInput","event","v","target","value","setState","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","state","password","handleCpasswordInput","c_password","handleFnameInput","fname","handleLnameInput","lname","handleAddressInput","address","handleCityInput","city","handleStateInput","handleZipInput","zip","handleEmailInput","handlePhoneInput","phone","handleFaxInput","fax","handleChangePwd","updatePwd","xtoken","then","response","status","msg2","message","error2","forceUpdate","catch","error","console","log","handleSaveChanges","updateUser","newstate","user","is_logged_in","AsyncStorage","setItem","conf","secret","JSON","stringify","re","errrr","msg","getItem","results","obje_results","parse","token","react__WEBPACK_IMPORTED_MODULE_7___default","components_Page__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","xl","lg","md","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","color","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","for","reactstrap__WEBPACK_IMPORTED_MODULE_16__","onChange","placeholder","id","defaultValue","disabled","states","stt","idx","check","row","sm","size","offset","reactstrap__WEBPACK_IMPORTED_MODULE_17__","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_18__","React","Component"],"mappings":"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","file":"static/js/25.67820497.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>{process.env.REACT_APP_NAME}</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","export default {\n    data:[\n        {\n          name: 'Alabama',\n          abbreviation: 'AL'\n        },\n        {\n          name: 'Alaska',\n          abbreviation: 'AK'\n        },\n        {\n          name: 'American Samoa',\n          abbreviation: 'AS'\n        },\n        {\n          name: 'Arizona',\n          abbreviation: 'AZ'\n        },\n        {\n          name: 'Arkansas',\n          abbreviation: 'AR'\n        },\n        {\n          name: 'California',\n          abbreviation: 'CA'\n        },\n        {\n          name: 'Colorado',\n          abbreviation: 'CO'\n        },\n        {\n          name: 'Connecticut',\n          abbreviation: 'CT'\n        },\n        {\n          name: 'Delaware',\n          abbreviation: 'DE'\n        },\n        {\n          name: 'District Of Columbia',\n          abbreviation: 'DC'\n        },\n        {\n          name: 'Federated States Of Micronesia',\n          abbreviation: 'FM'\n        },\n        {\n          name: 'Florida',\n          abbreviation: 'FL'\n        },\n        {\n          name: 'Georgia',\n          abbreviation: 'GA'\n        },\n        {\n          name: 'Guam',\n          abbreviation: 'GU'\n        },\n        {\n          name: 'Hawaii',\n          abbreviation: 'HI'\n        },\n        {\n          name: 'Idaho',\n          abbreviation: 'ID'\n        },\n        {\n          name: 'Illinois',\n          abbreviation: 'IL'\n        },\n        {\n          name: 'Indiana',\n          abbreviation: 'IN'\n        },\n        {\n          name: 'Iowa',\n          abbreviation: 'IA'\n        },\n        {\n          name: 'Kansas',\n          abbreviation: 'KS'\n        },\n        {\n          name: 'Kentucky',\n          abbreviation: 'KY'\n        },\n        {\n          name: 'Louisiana',\n          abbreviation: 'LA'\n        },\n        {\n          name: 'Maine',\n          abbreviation: 'ME'\n        },\n        {\n          name: 'Marshall Islands',\n          abbreviation: 'MH'\n        },\n        {\n          name: 'Maryland',\n          abbreviation: 'MD'\n        },\n        {\n          name: 'Massachusetts',\n          abbreviation: 'MA'\n        },\n        {\n          name: 'Michigan',\n          abbreviation: 'MI'\n        },\n        {\n          name: 'Minnesota',\n          abbreviation: 'MN'\n        },\n        {\n          name: 'Mississippi',\n          abbreviation: 'MS'\n        },\n        {\n          name: 'Missouri',\n          abbreviation: 'MO'\n        },\n        {\n          name: 'Montana',\n          abbreviation: 'MT'\n        },\n        {\n          name: 'Nebraska',\n          abbreviation: 'NE'\n        },\n        {\n          name: 'Nevada',\n          abbreviation: 'NV'\n        },\n        {\n          name: 'New Hampshire',\n          abbreviation: 'NH'\n        },\n        {\n          name: 'New Jersey',\n          abbreviation: 'NJ'\n        },\n        {\n          name: 'New Mexico',\n          abbreviation: 'NM'\n        },\n        {\n          name: 'New York',\n          abbreviation: 'NY'\n        },\n        {\n          name: 'North Carolina',\n          abbreviation: 'NC'\n        },\n        {\n          name: 'North Dakota',\n          abbreviation: 'ND'\n        },\n        {\n          name: 'Northern Mariana Islands',\n          abbreviation: 'MP'\n        },\n        {\n          name: 'Ohio',\n          abbreviation: 'OH'\n        },\n        {\n          name: 'Oklahoma',\n          abbreviation: 'OK'\n        },\n        {\n          name: 'Oregon',\n          abbreviation: 'OR'\n        },\n        {\n          name: 'Palau',\n          abbreviation: 'PW'\n        },\n        {\n          name: 'Pennsylvania',\n          abbreviation: 'PA'\n        },\n        {\n          name: 'Puerto Rico',\n          abbreviation: 'PR'\n        },\n        {\n          name: 'Rhode Island',\n          abbreviation: 'RI'\n        },\n        {\n          name: 'South Carolina',\n          abbreviation: 'SC'\n        },\n        {\n          name: 'South Dakota',\n          abbreviation: 'SD'\n        },\n        {\n          name: 'Tennessee',\n          abbreviation: 'TN'\n        },\n        {\n          name: 'Texas',\n          abbreviation: 'TX'\n        },\n        {\n          name: 'Utah',\n          abbreviation: 'UT'\n        },\n        {\n          name: 'Vermont',\n          abbreviation: 'VT'\n        },\n        {\n          name: 'Virgin Islands',\n          abbreviation: 'VI'\n        },\n        {\n          name: 'Virginia',\n          abbreviation: 'VA'\n        },\n        {\n          name: 'Washington',\n          abbreviation: 'WA'\n        },\n        {\n          name: 'West Virginia',\n          abbreviation: 'WV'\n        },\n        {\n          name: 'Wisconsin',\n          abbreviation: 'WI'\n        },\n        {\n          name: 'Wyoming',\n          abbreviation: 'WY'\n        }\n      ]\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import Page from 'components/Page';\nimport React from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormFeedback,\n  FormGroup,\n  FormText,\n  Input,\n  Label,\n  Row,\n  Alert,\n} from 'reactstrap';\nimport states from \"../api/states\";\nimport { updateUser, updatePwd, } from \"../api/api\";\nimport AsyncStorage from '@callstack/async-storage';\nimport conf from \"../api/config\";\n\nclass ProfilePage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          fname : '',\n          lname : '',\n          address : '',\n          city:'',\n          state:'nn',\n          zip:'',\n          email:'',\n          phone:'',\n          password:'',\n          c_password:'',\n          xtoken:'',\n          msg: '',\n          error: '',\n          msg2: '',\n          error2: '',\n        };\n        AsyncStorage.getItem(conf.secret)\n        .then((results) => {\n          if( results !== null )\n          {\n            let obje_results = JSON.parse(results);\n            this.setState({\n                ...this.state,\n                fname: obje_results.user.fname,\n                lname: obje_results.user.lname,\n                address: obje_results.user.address,\n                city: obje_results.user.city,\n                state: obje_results.user.state,\n                zip: obje_results.user.zip,\n                email: obje_results.user.email,\n                phone: obje_results.user.phone,\n                xtoken : obje_results.user.token,\n            });\n          }\n        })\n        .catch((error) => {\n          console.log('storage error', error);\n        });\n    }\n    componentDidMount() {\n    }\n\n    isValidEmailAddress = (email) => {\n        if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n            return true;\n        }\n        return false;\n    }\n\n    handlePasswordInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, password: v,});\n    }\n    handleCpasswordInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, c_password: v,});\n    }\n    handleFnameInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, fname: v,});\n        // console.log(v);\n    }\n    handleLnameInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, lname: v,});\n        // console.log(v);\n    }\n    handleAddressInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, address: v,});\n    }\n    handleCityInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, city: v,});\n    }\n    handleStateInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, state: v,});\n    }\n    handleZipInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, zip: v,});\n    }\n    handleEmailInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, email: v,});\n    }\n    handlePhoneInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, phone: v,});\n    }\n    handleFaxInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, fax: v,});\n    }\n    handleChangePwd = () => {\n        updatePwd(this.state.xtoken, this.state)\n        .then((response) => {\n            if( response.status === 200)\n            {\n                this.setState({\n                    ...this.state,\n                    msg2: response.message,\n                    error2: '',\n                });\n\n                this.forceUpdate();\n            }\n            else\n            {\n                this.setState({\n                    ...this.state,\n                    error2: response.message,\n                    msg2: '',\n                });\n            }\n        })\n        .catch((error) => {\n            this.setState({\n                ...this.state,\n                error: 'Connection error occured',\n            });\n            console.log('error', error);\n        });\n    }\n    handleSaveChanges = () => {\n        updateUser(this.state.xtoken, this.state)\n        .then((response) => {\n            if( response.status === 200)\n            {\n                let newstate = {\n                    user : response.data,\n                    is_logged_in : true,\n                };\n                AsyncStorage.setItem(conf.secret, JSON.stringify(newstate)).then((re) => {})\n                .catch((errrr) => {});\n                this.setState({\n                    ...this.state,\n                    msg: response.message,\n                    error: '',\n                });\n\n                this.forceUpdate();\n            }\n            else\n            {\n                this.setState({\n                    ...this.state,\n                    error: response.message,\n                    msg: '',\n                });\n            }\n        })\n        .catch((error) => {\n            this.setState({\n                ...this.state,\n                error: 'Connection error occured',\n            });\n            console.log('error', error);\n        });\n    }\n    render() {\n      return (\n        <Page title=\"User Profile\" breadcrumbs={[{ name: 'Profile', active: true }]}>\n          <Row>\n            <Col xl={4} lg={12} md={12}>\n              <Card>\n                {this.state.error.length > 0 && (\n                    <Alert color=\"danger\">{this.state.error}</Alert>\n                )}\n                {this.state.msg.length > 0 && (\n                    <Alert color=\"success\">{this.state.msg}</Alert>\n                )}\n                <CardBody>\n                  <Form>\n                    <FormGroup>\n                      <Label for=\"exampleEmail\">First name*</Label>\n                      <Input onChange={this.handleFnameInput}\n                        type=\"text\" \n                        value={this.state.fname}\n                        name=\"fname\"\n                        placeholder=\"\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"exampleEmail\">Last name*</Label>\n                      <Input onChange={this.handleLnameInput}\n                        type=\"text\" \n                        value={this.state.lname}\n                        name=\"lname\"\n                        placeholder=\"\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"examplePassword\">Address*</Label>\n                      <Input onChange={this.handleAddressInput}\n                        type=\"text\"\n                        value={this.state.address}\n                        name=\"address\"\n                        placeholder=\"e.g. 3015 Lanely park\"\n                      />\n                    </FormGroup>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xl={4} lg={12} md={12}>\n              <Card>\n                <CardBody>\n                  <Form>\n                    <FormGroup>\n                      <Label for=\"exampleUrl\">City*</Label>\n                      <Input onChange={this.handleCityInput}\n                        type=\"text\" \n                        value={this.state.city}\n                        name=\"city\"\n                        id=\"city\"\n                        placeholder=\"e.g. Plano\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"exampleSelect\">State*</Label>\n                      <Input onChange={this.handleStateInput} value={this.state.state} defaultValue={this.state.state} type=\"select\" name=\"state\">\n                        <option value=\"nn\" disabled={true}>Select state</option>\n                        {\n                            states.data.map((stt, idx) => (\n                                <option key={idx} value={stt.abbreviation}>{stt.name}</option>\n                            ))\n                        }\n                      </Input>\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"exampleNumber\">Zip Code*</Label>\n                      <Input onChange={this.handleZipInput}\n                        type=\"number\"\n                        value={this.state.zip}\n                        name=\"zip\"\n                        id=\"zip\"\n                        placeholder=\"zip code\"\n                      />\n                    </FormGroup>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n    \n            <Col xl={4} lg={12} md={12}>\n              <Card>\n                <CardBody>\n                  <Form>\n                    <FormGroup>\n                      <Label for=\"examplePassword\">Email address*</Label>\n                      <Input onChange={this.handleEmailInput}\n                        type=\"email\"\n                        value={this.state.email}\n                        name=\"email\"\n                        placeholder=\"a.valid@email.com\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"examplePassword\">Phone number*</Label>\n                      <Input onChange={this.handlePhoneInput}\n                        type=\"text\"\n                        value={this.state.phone}\n                        name=\"phone\"\n                        placeholder=\"\"\n                      />\n                    </FormGroup>\n                    <FormGroup check row>\n                      <Col sm={{ size: 10, offset: 2 }}>\n                        <Button type=\"button\" onClick={this.handleSaveChanges}>Save changes</Button>\n                      </Col>\n                    </FormGroup>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n\n\n          <Row>\n            <Col xl={6} lg={12} md={12}>\n              <Card>\n                <CardHeader>Change password</CardHeader>\n                {this.state.error2.length > 0 && (\n                    <Alert color=\"danger\">{this.state.error2}</Alert>\n                )}\n                {this.state.msg2.length > 0 && (\n                    <Alert color=\"success\">{this.state.msg2}</Alert>\n                )}\n                <CardBody>\n                  <Form>\n                    <FormGroup>\n                      <Label for=\"exampleEmail\">New password*</Label>\n                      <Input onChange={this.handlePasswordInput}\n                        type=\"password\" \n                        value={this.state.password}\n                        name=\"pass\"\n                        placeholder=\"\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Label for=\"exampleEmail\">Re-enter password*</Label>\n                      <Input onChange={this.handleCpasswordInput}\n                        type=\"password\" \n                        value={this.state.c_password}\n                        name=\"cpass\"\n                        placeholder=\"\"\n                      />\n                    </FormGroup>\n                    \n                    <FormGroup check row>\n                      <Col sm={{ size: 10, offset: 2 }}>\n                        <Button type=\"button\" onClick={this.handleChangePwd}>Update password</Button>\n                      </Col>\n                    </FormGroup>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n    \n          </Row>\n    \n        </Page>\n      );\n    }\n}\nexport default ProfilePage;\n"],"sourceRoot":""}