{"version":3,"sources":["components/Typography.js","components/Page.js","api/rates.js","pages/WeeklyReportsPage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","process","length","map","_ref2","index","name","active","key","__webpack_exports__","data","value","WeeklyReportsPage","props","_this","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","searchableTrucks","input","trucksOpt","forEach","x","lbl","make","number","entry","id","label","push","setState","_Users_softbucketio_projects_iTruck_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","state","selectabletrucks","firstUpper","str","string","toLowerCase","charAt","toUpperCase","slice","handleStartDateInput","event","v","target","from_date","handleEndDateInput","to_date","handleTruckInput","selectedTruck","toString","truck","console","log","handleRateInput","rate","handleSaveChanges","preload","findWeeklyReport","xtoken","then","response","status","msg","message","trips","deductions","scheduled","fuel","summations","error","forceUpdate","catch","handleDownloadReport","downloadWeeklyReport","url","fileurl","link","document","href","setAttribute","click","downloadFile","c","d","trucks","AsyncStorage","getItem","conf","secret","results","obje_results","JSON","parse","user","token","findTrucks","respError","react__WEBPACK_IMPORTED_MODULE_7___default","components_Page__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","xl","lg","md","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","components_PageSpinner__WEBPACK_IMPORTED_MODULE_21__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","color","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","for","reactstrap__WEBPACK_IMPORTED_MODULE_18__","onChange","placeholder","react_select__WEBPACK_IMPORTED_MODULE_22__","defaultValue","options","disabled","load_rates","stt","idx","reactstrap__WEBPACK_IMPORTED_MODULE_19__","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_20__","responsive","trp","scope","origin","destination","mileage","react_moment__WEBPACK_IMPORTED_MODULE_8___default","format","created_at","net","colSpan","ded","description","misc_amount_f","amount_f","total","fl","city","sch","React","Component"],"mappings":"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","file":"static/js/34.7d50e863.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>{process.env.REACT_APP_NAME}</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","export default {\n    data:[\n        {\n          name: '1%',\n          value: 1\n        },\n        {\n          name: '2%',\n          value: 2\n        },\n        {\n          name: '3%',\n          value: 3\n        },\n        {\n          name: '4%',\n          value: 4\n        },\n        {\n          name: '5%',\n          value: 5\n        },\n        {\n          name: '6%',\n          value: 6\n        },\n        {\n          name: '7%',\n          value: 7\n        },\n        {\n          name: '8%',\n          value: 8\n        },\n        {\n          name: '9%',\n          value: 9\n        },\n        {\n          name: '10%',\n          value: 10\n        },\n        {\n          name: '11%',\n          value: 11\n        },\n        {\n          name: '12%',\n          value: 12\n        },\n        {\n          name: '13%',\n          value: 13\n        },\n        {\n          name: '14%',\n          value: 14\n        },\n        {\n          name: '15%',\n          value: 15\n        },\n        {\n          name: '16%',\n          value: 16\n        },\n        {\n          name: '17%',\n          value: 17\n        },\n        {\n          name: '18%',\n          value: 18\n        },\n        {\n          name: '19%',\n          value: 19\n        },\n        {\n          name: '20%',\n          value: 20\n        },\n        {\n          name: '21%',\n          value: 21\n        },\n        {\n          name: '22%',\n          value: 22\n        },\n        {\n          name: '23%',\n          value: 23\n        },\n        {\n          name: '24%',\n          value: 24\n        },\n        {\n          name: '25%',\n          value: 25\n        },\n        {\n          name: '26%',\n          value: 26\n        },\n        {\n          name: '27%',\n          value: 27\n        },\n        {\n          name: '28%',\n          value: 28\n        },\n        {\n          name: '29%',\n          value: 29\n        },\n        {\n          name: '30%',\n          value: 30\n        },\n      ]\n}","import Page from 'components/Page';\nimport React from 'react';\nimport Moment from 'react-moment';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormFeedback,\n  FormGroup,\n  FormText,\n  Input,\n  Label,\n  Row,\n  Alert,\n  Table,\n} from 'reactstrap';\nimport PageSpinner from 'components/PageSpinner';\nimport Searchable from 'react-select';\nimport { findWeeklyReport, findTrucks, downloadWeeklyReport, } from \"../api/api\";\nimport AsyncStorage from '@callstack/async-storage';\nimport conf from \"../api/config\";\nimport load_rates from \"../api/rates\";\n\n// const options = [\n//   { value: 'chocolate', label: 'Chocolate' },\n//   { value: 'strawberry', label: 'Strawberry' },\n//   { value: 'vanilla', label: 'Vanilla' }\n// ]\nclass WeeklyReportsPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            truck : 'nn',\n            rate : 'nn',\n            from_date: '',\n            to_date: '',\n            xtoken:'',\n            msg: '',\n            error: '',\n            fileurl:'',\n            downloadFile:true,\n            preload:false,\n            trips: [],\n            deductions: [],\n            scheduled: [],\n            fuel: [],\n            summations: {\n                a:'0.00',\n                b:'0.00',\n                c:'0.00',\n                d:'0.00',\n                e:'0.00',\n            },\n            trucks:[],\n            selectabletrucks:[],\n        };\n        AsyncStorage.getItem(conf.secret)\n        .then((results) => {\n          if( results !== null )\n          {\n            let obje_results = JSON.parse(results);\n            this.setState({\n              ...this.state,\n              xtoken : obje_results.user.token,\n            });\n            findTrucks(obje_results.user.token).then((response) => {\n              this.setState({\n                ...this.state,\n                trucks:response.data,\n              });\n              this.searchableTrucks(response.data);\n            }).catch((respError) => {});\n          }\n        })\n        .catch((error) => {\n          console.log('storage error', error);\n        });\n    }\n\n    componentDidMount() {\n    }\n\n    searchableTrucks = (input) => {\n      let trucksOpt = [];\n      \n      input.forEach( function(x){\n        let lbl = x.make + \" - \" + x.number;\n        let entry = { value: x.id, label: lbl };\n        trucksOpt.push(entry);\n      });\n      this.setState({\n        ...this.state,\n        selectabletrucks:trucksOpt,\n      });\n    }\n    firstUpper = (str) => {\n        let string = str.toLowerCase();\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    \n    handleStartDateInput = (event) => {\n      const v = event.target.value;\n      this.setState({...this.state, from_date: v,});\n    }\n    handleEndDateInput = (event) => {\n      const v = event.target.value;\n      this.setState({...this.state, to_date: v,});\n    }\n    handleTruckInput = selectedTruck => {\n        const v = selectedTruck.value.toString();\n        this.setState({...this.state, truck: v,});\n        console.log('selected truck', v);\n    }\n    handleRateInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, rate: v,});\n    }\n    handleSaveChanges = () => {\n      this.setState({...this.state, preload:true});\n    //   console.log('this state', this.state);\n    findWeeklyReport(this.state.xtoken, this.state)\n      .then((response) => {\n        //   console.log('exp response', response);\n          if( response.status === 200)\n          {\n              this.setState({\n                  ...this.state,\n                  msg: response.message,\n                  trips: response.trips,\n                  deductions: response.deductions,\n                  scheduled: response.scheduled,\n                  fuel: response.fuel,\n                  summations: response.summations,\n                  preload:false,\n                  error: '',\n              });\n              this.forceUpdate();\n          }\n          else\n          {\n              this.setState({\n                  ...this.state,\n                  error: response.message,\n                  preload:false,\n                  msg: '',\n              });\n          }\n      })\n      .catch((error) => {\n          this.setState({\n              ...this.state,\n              error: 'Connection error occured',\n              preload:false,\n          });\n          console.log('error', error);\n      });\n    }\n    handleDownloadReport = () => {\n      this.setState({...this.state, preload:true});\n      //console.log('this state', this.state);\n      downloadWeeklyReport(this.state.xtoken, this.state)\n      .then((response) => {\n          // console.log('download response', response);\n          if( response.status === 200)\n          {\n            const url = response.fileurl;\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', 'statement');\n            link.setAttribute('target', '_blank');\n            link.click();\n            this.setState({\n                ...this.state,\n                preload:false,\n                fileurl: response.fileurl,\n                error: '',\n            });\n            this.forceUpdate();\n          }\n          else\n          {\n              this.setState({\n                  ...this.state,\n                  error: response.message,\n                  preload:false,\n                  msg: '',\n              });\n          }\n      })\n      .catch((error) => {\n          this.setState({\n              ...this.state,\n              error: 'Connection error occured',\n              preload:false,\n          });\n          console.log('error', error);\n      });\n    }\n    render() {\n      return (\n        <Page title=\"Weekly reports\" breadcrumbs={[{ name: 'Reports', active: true }]}>\n          <Row>\n            <Col xl={12} lg={12} md={12}>\n              <Card>\n                <CardHeader>\n                Weekly reports\n                {this.state.preload && (<PageSpinner/>)}\n                </CardHeader>\n                {this.state.error.length > 0 && (\n                    <Alert color=\"danger\">{this.state.error}</Alert>\n                )}\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xl={4} lg={12} md={12}>\n              <Card>\n                <CardBody>\n                  <Form>\n                    <FormGroup>\n                      <Label for=\"exampleSelect\">Start date*</Label>\n                      <Input onChange={this.handleStartDateInput}\n                        type=\"date\" \n                        value={this.state.from_date}\n                        name=\"fromdate\"\n                        placeholder=\"\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"exampleSelect\">End date*</Label>\n                      <Input onChange={this.handleEndDateInput}\n                        type=\"date\" \n                        value={this.state.to_date}\n                        name=\"todate\"\n                        placeholder=\"\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"exampleSelect\">Truck*</Label>\n                      <Searchable defaultValue={this.state.truck} onChange={this.handleTruckInput} options={this.state.selectabletrucks}/>\n                    </FormGroup>\n                    {/* <FormGroup>\n                      <Label for=\"exampleSelect\">Truck*</Label>\n                      <Input onChange={this.handleTruckInput} value={this.state.truck} defaultValue={this.state.truck} type=\"select\" name=\"driver\">\n                        <option value=\"nn\" disabled={true}>Select truck</option>\n                        {\n                            this.state.trucks.map((stt, idx) => (\n                                <option key={idx} value={stt.id}>{this.firstUpper(stt.make) + \" - \" + stt.number}</option>\n                            ))\n                        }\n                      </Input>\n                    </FormGroup> */}\n                    <FormGroup>\n                      <Label for=\"exampleSelect\">Rate*</Label>\n                      <Input onChange={this.handleRateInput} value={this.state.rate} defaultValue={this.state.rate} type=\"select\" name=\"driver\">\n                        <option value=\"nn\" disabled={true}>Select rate</option>\n                        {\n                            load_rates.data.map((stt, idx) => (\n                                <option key={idx} value={stt.value}>{stt.name}</option>\n                            ))\n                        }\n                      </Input>\n                    </FormGroup>\n                    <Row>\n                        <Col xl={6} lg={12} md={12}>\n                            <FormGroup>\n                                <Button type=\"button\" onClick={this.handleSaveChanges}>Run report</Button>\n                            </FormGroup>\n                        </Col>\n                        <Col xl={6} lg={12} md={12}>\n                            <FormGroup>\n                                <Button type=\"button\" onClick={this.handleDownloadReport}>Download</Button>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl={8} lg={12} md={12}>\n              <Card>\n                <CardHeader className=\"statement-head\">Trips</CardHeader>\n                <CardBody>\n                    <Table responsive>\n                        <thead>\n                        <tr>\n                            <th>Trip</th>\n                            <th>Description</th>\n                            <th>Mileage</th>\n                            <th>Date</th>\n                            <th>Load rate</th>\n                            <th>Net rate</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        { this.state.trips.map((trp, idx) => (\n                            <tr>\n                                <th scope=\"row\">{trp.number}</th>\n                                <td>{trp.origin} - {trp.destination}</td>\n                                <td>{trp.mileage}</td>\n                                <td><Moment format=\"YYYY/MM/DD\">{trp.created_at}</Moment></td>\n                                <td>${trp.rate}</td>\n                                <td>${trp.net}</td>\n                            </tr>\n                        ))}\n                        <tr>\n                            <th colSpan=\"4\"></th>\n                            <td><b>Total</b></td>\n                            <td><b>${this.state.summations.a}</b></td>\n                        </tr>\n                        </tbody>\n                    </Table>\n                </CardBody>\n                {/* deductions */}\n                <CardHeader className=\"statement-head\">Deductions</CardHeader>\n                <CardBody>\n                    <Table responsive>\n                        <thead>\n                        <tr>\n                            <th>Description</th>\n                            <th>Date</th>\n                            <th>Misc. amount</th>\n                            <th>Amount</th>\n                            <th>Subtotal</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.deductions.map((ded, idx) => (\n                            <tr>\n                                <td>{ded.description}</td>\n                                <td><Moment format=\"YYYY/MM/DD\">{ded.created_at}</Moment></td>\n                                <td>${ded.misc_amount_f}</td>\n                                <td>${ded.amount_f}</td>\n                                <td>${ded.total}</td>\n                            </tr>\n                        ))}\n                        <tr>\n                            <th colSpan=\"3\"></th>\n                            <td><b>Total</b></td>\n                            <td><b>(${this.state.summations.b})</b></td>\n                        </tr>\n                        </tbody>\n                    </Table>\n                </CardBody>\n                {/* fuel */}\n                <CardHeader className=\"statement-head\">Fuel Card</CardHeader>\n                <CardBody>\n                    <Table responsive>\n                        <thead>\n                        <tr>\n                            <th>Description</th>\n                            <th>City</th>\n                            <th>State</th>\n                            <th>Date</th>\n                            <th>Misc. cost</th>\n                            <th>Fuel cost</th>\n                            <th>Subtotal</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        { this.state.fuel.map((fl, idx) => (\n                            <tr>\n                                <td>{fl.description}</td>\n                                <td>{fl.city}</td>\n                                <td>{fl.state}</td>\n                                <td><Moment format=\"YYYY/MM/DD\">{fl.created_at}</Moment></td>\n                                <td>${fl.misc_amount_f}</td>\n                                <td>${fl.amount_f}</td>\n                                <td>${fl.total}</td>\n                            </tr>\n                        ))}\n                        <tr>\n                            <th colSpan=\"5\"></th>\n                            <td><b>Total</b></td>\n                            <td><b>(${this.state.summations.c})</b></td>\n                        </tr>\n                        </tbody>\n                    </Table>\n                </CardBody>\n                {/* scheduled */}\n                <CardHeader className=\"statement-head\">Scheduled deductions</CardHeader>\n                <CardBody>\n                    <Table responsive>\n                        <thead>\n                        <tr>\n                            <th>Description</th>\n                            <th>Date</th>\n                            <th>Amount</th>\n                            <th>Subtotal</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.scheduled.map((sch, idx) => (\n                            <tr>\n                                <td>{sch.description}</td>\n                                <td><Moment format=\"YYYY/MM/DD\">{sch.created_at}</Moment></td>\n                                <td>${sch.amount_f}</td>\n                                <td>${sch.total}</td>\n                            </tr>\n                        ))}\n                        <tr>\n                            <td colSpan=\"2\"></td>\n                            <td><b>Total</b></td>\n                            <td><b>(${this.state.summations.d})</b></td>\n                        </tr>\n                        <tr>\n                            <td colSpan=\"4\"></td>\n                        </tr>\n                        <tr className=\"statement-check\">\n                            <td colSpan=\"2\"></td>\n                            <td><b>Check Amount</b></td>\n                            <td><b>${this.state.summations.e}</b></td>\n                        </tr>\n                        </tbody>\n                    </Table>\n                </CardBody>\n              </Card>\n            </Col>\n        </Row>\n        </Page>\n      );\n    }\n}\nexport default WeeklyReportsPage;\n"],"sourceRoot":""}