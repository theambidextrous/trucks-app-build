{"version":3,"sources":["components/Page.js","components/Typography.js","api/states.js","components/CustomToolbarSelectLoads.js","pages/BillingPayPage.js"],"names":["bem","bn","create","Page","_ref","title","breadcrumbs","Tag","tag","className","children","restProps","Object","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","type","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","process","length","map","_ref2","index","name","active","key","defaultProps","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","TypoComp","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classNames","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","__webpack_exports__","data","abbreviation","CustomToolbarSelectLoads","props","_this","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","hideEditModal","setState","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","state","showEditModal","showPayModal","saved","rerenderParentCallback","handleDocInput","event","v","target","files","delivery_docs","handlePayStatusInput","value","paid","handleEditSaveChanges","formData","FormData","append","uploadLoadDocs","xtoken","id","then","response","status","error","msg","message","catch","console","log","handlePaySaveChanges","postData","uploadAttachPay","handleUploadDeliveryDoc","dataIndex","selectedRows","selectedRowData","originalData","bol","is_delivered","Xtoken","handleAttachPayment","handleGoToEdit","window","location","href","handleDeleteSelection","deleteLoad","alert","handleClickDeselectAll","setSelectedRows","firstUpper","str","string","toLowerCase","charAt","toUpperCase","slice","handleClickBlockSelected","concat","row","react__WEBPACK_IMPORTED_MODULE_6___default","iconContainer","_material_ui_core_Tooltip__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_7__","iconButton","onClick","_material_ui_icons_Payment__WEBPACK_IMPORTED_MODULE_12___default","icon","_material_ui_icons_Attachment__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_icons_IndeterminateCheckBox__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_11___default","reactstrap__WEBPACK_IMPORTED_MODULE_17__","size","isOpen","backdrop","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_19__","color","reactstrap__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_21__","reactstrap__WEBPACK_IMPORTED_MODULE_22__","xl","lg","md","reactstrap__WEBPACK_IMPORTED_MODULE_23__","reactstrap__WEBPACK_IMPORTED_MODULE_24__","reactstrap__WEBPACK_IMPORTED_MODULE_25__","reactstrap__WEBPACK_IMPORTED_MODULE_26__","reactstrap__WEBPACK_IMPORTED_MODULE_27__","for","reactstrap__WEBPACK_IMPORTED_MODULE_28__","readOnly","onChange","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_29__","reactstrap__WEBPACK_IMPORTED_MODULE_30__","defaultValue","disabled","React","Component","withStyles","marginRight","inverseIcon","transform","stripePromise","loadStripe","conf","stripe_p_key","BillingPayPage","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","toggleTab","tab","activeTab","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","handleGroupInput","group","findPricing","validUntil","end","cost","handleSaveChanges","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","stop","preload","AsyncStorage","getItem","secret","results","obje_results","JSON","parse","user","token","_this2","react__WEBPACK_IMPORTED_MODULE_9___default","_components_Context__WEBPACK_IMPORTED_MODULE_11__","context","components_Page__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","tabs","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","classnames","tabId","components_PageSpinner__WEBPACK_IMPORTED_MODULE_29__","_stripe_react_stripe_js__WEBPACK_IMPORTED_MODULE_36__","options","style","base","fontSize","backgroundColor","borderWidth","borderColor","::placeholder","invalid","check","sm","offset","_callee2","_this2$props","stripe","elements","cardElement","_yield$stripe$createP","paymentMethod","payment_method","_context2","abrupt","getElement","CardElement","createPaymentMethod","card","sent","completePay","newstate","is_logged_in","setItem","stringify","switchStateHandler","errors","InjectedSectionForm","_ref3","Section","Fragment"],"mappings":"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","file":"static/js/25.28eb80b4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>{process.env.REACT_APP_NAME}</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","export default {\n    data:[\n        {\n          name: 'Alabama',\n          abbreviation: 'AL'\n        },\n        {\n          name: 'Alaska',\n          abbreviation: 'AK'\n        },\n        {\n          name: 'American Samoa',\n          abbreviation: 'AS'\n        },\n        {\n          name: 'Arizona',\n          abbreviation: 'AZ'\n        },\n        {\n          name: 'Arkansas',\n          abbreviation: 'AR'\n        },\n        {\n          name: 'California',\n          abbreviation: 'CA'\n        },\n        {\n          name: 'Colorado',\n          abbreviation: 'CO'\n        },\n        {\n          name: 'Connecticut',\n          abbreviation: 'CT'\n        },\n        {\n          name: 'Delaware',\n          abbreviation: 'DE'\n        },\n        {\n          name: 'District Of Columbia',\n          abbreviation: 'DC'\n        },\n        {\n          name: 'Federated States Of Micronesia',\n          abbreviation: 'FM'\n        },\n        {\n          name: 'Florida',\n          abbreviation: 'FL'\n        },\n        {\n          name: 'Georgia',\n          abbreviation: 'GA'\n        },\n        {\n          name: 'Guam',\n          abbreviation: 'GU'\n        },\n        {\n          name: 'Hawaii',\n          abbreviation: 'HI'\n        },\n        {\n          name: 'Idaho',\n          abbreviation: 'ID'\n        },\n        {\n          name: 'Illinois',\n          abbreviation: 'IL'\n        },\n        {\n          name: 'Indiana',\n          abbreviation: 'IN'\n        },\n        {\n          name: 'Iowa',\n          abbreviation: 'IA'\n        },\n        {\n          name: 'Kansas',\n          abbreviation: 'KS'\n        },\n        {\n          name: 'Kentucky',\n          abbreviation: 'KY'\n        },\n        {\n          name: 'Louisiana',\n          abbreviation: 'LA'\n        },\n        {\n          name: 'Maine',\n          abbreviation: 'ME'\n        },\n        {\n          name: 'Marshall Islands',\n          abbreviation: 'MH'\n        },\n        {\n          name: 'Maryland',\n          abbreviation: 'MD'\n        },\n        {\n          name: 'Massachusetts',\n          abbreviation: 'MA'\n        },\n        {\n          name: 'Michigan',\n          abbreviation: 'MI'\n        },\n        {\n          name: 'Minnesota',\n          abbreviation: 'MN'\n        },\n        {\n          name: 'Mississippi',\n          abbreviation: 'MS'\n        },\n        {\n          name: 'Missouri',\n          abbreviation: 'MO'\n        },\n        {\n          name: 'Montana',\n          abbreviation: 'MT'\n        },\n        {\n          name: 'Nebraska',\n          abbreviation: 'NE'\n        },\n        {\n          name: 'Nevada',\n          abbreviation: 'NV'\n        },\n        {\n          name: 'New Hampshire',\n          abbreviation: 'NH'\n        },\n        {\n          name: 'New Jersey',\n          abbreviation: 'NJ'\n        },\n        {\n          name: 'New Mexico',\n          abbreviation: 'NM'\n        },\n        {\n          name: 'New York',\n          abbreviation: 'NY'\n        },\n        {\n          name: 'North Carolina',\n          abbreviation: 'NC'\n        },\n        {\n          name: 'North Dakota',\n          abbreviation: 'ND'\n        },\n        {\n          name: 'Northern Mariana Islands',\n          abbreviation: 'MP'\n        },\n        {\n          name: 'Ohio',\n          abbreviation: 'OH'\n        },\n        {\n          name: 'Oklahoma',\n          abbreviation: 'OK'\n        },\n        {\n          name: 'Oregon',\n          abbreviation: 'OR'\n        },\n        {\n          name: 'Palau',\n          abbreviation: 'PW'\n        },\n        {\n          name: 'Pennsylvania',\n          abbreviation: 'PA'\n        },\n        {\n          name: 'Puerto Rico',\n          abbreviation: 'PR'\n        },\n        {\n          name: 'Rhode Island',\n          abbreviation: 'RI'\n        },\n        {\n          name: 'South Carolina',\n          abbreviation: 'SC'\n        },\n        {\n          name: 'South Dakota',\n          abbreviation: 'SD'\n        },\n        {\n          name: 'Tennessee',\n          abbreviation: 'TN'\n        },\n        {\n          name: 'Texas',\n          abbreviation: 'TX'\n        },\n        {\n          name: 'Utah',\n          abbreviation: 'UT'\n        },\n        {\n          name: 'Vermont',\n          abbreviation: 'VT'\n        },\n        {\n          name: 'Virgin Islands',\n          abbreviation: 'VI'\n        },\n        {\n          name: 'Virginia',\n          abbreviation: 'VA'\n        },\n        {\n          name: 'Washington',\n          abbreviation: 'WA'\n        },\n        {\n          name: 'West Virginia',\n          abbreviation: 'WV'\n        },\n        {\n          name: 'Wisconsin',\n          abbreviation: 'WI'\n        },\n        {\n          name: 'Wyoming',\n          abbreviation: 'WY'\n        }\n      ]\n}","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CompareArrowsIcon from \"@material-ui/icons/CompareArrows\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport Attachment from '@material-ui/icons/Attachment';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport IndeterminateCheckBoxIcon from \"@material-ui/icons/IndeterminateCheckBox\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport states from \"../api/states\";\nimport { uploadLoadDocs, uploadAttachPay, deleteLoad, findDrivers,findTrucks } from \"../api/api\";\nimport {\n  Button,\n  ButtonGroup,\n  FormGroup,\n  Form,\n  Label,\n  Input,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Row,\n  Alert,\n} from 'reactstrap';\n\nconst defaultToolbarSelectStyles = {\n  iconButton: {\n  },\n  iconContainer: {\n    marginRight: \"24px\",\n  },\n  inverseIcon: {\n    transform: \"rotate(90deg)\",\n  },\n};\n\nclass CustomToolbarSelectLoads extends React.Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n        showEditModal:false,\n        showPayModal:false,\n        saved:false,\n        id: '',\n        bol:'',\n        is_delivered : 0,\n        delivery_docs : '',\n        paid:'nn',\n        xtoken:'',\n        msg: '',\n        error: '',\n    };\n  }\n  hideEditModal = () => {\n    this.setState({\n      ...this.state,\n      showEditModal:false,\n      showPayModal:false,\n    });\n    if(this.state.saved)\n    {\n      this.props.rerenderParentCallback();\n    }\n  }\n\n    handleDocInput = (event) => {\n        const v = event.target.files[0];\n        this.setState({...this.state, delivery_docs: v,});\n    }\n    handlePayStatusInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, paid: v,});\n    }\n    \n    handleEditSaveChanges = () => {\n        const formData = new FormData();\n        formData.append('delivery_docs', this.state.delivery_docs);\n        uploadLoadDocs(this.state.xtoken, formData, this.state.id)\n        .then((response) => {\n            // console.log('save error', response);\n            if( response.status === 200)\n            {\n              this.setState({\n                ...this.state,\n                saved:true,\n                error: '',\n                msg: response.message,\n              });\n            }\n            else\n            {\n                this.setState({\n                    ...this.state,\n                    error: response.message,\n                    msg: '',\n                });\n            }\n        })\n        .catch((error) => {\n            this.setState({\n                ...this.state,\n                error: 'Connection error occured',\n            });\n            console.log('error', error);\n        });\n    }\n    handlePaySaveChanges = () => {\n      let postData = {status: this.state.paid};\n      uploadAttachPay(this.state.xtoken, postData, this.state.id)\n      .then((response) => {\n          // console.log('save error', response);\n          if( response.status === 200)\n          {\n            this.setState({\n              ...this.state,\n              saved:true,\n              error: '',\n              msg: response.message,\n            });\n          }\n          else\n          {\n              this.setState({\n                  ...this.state,\n                  error: response.message,\n                  msg: '',\n              });\n          }\n      })\n      .catch((error) => {\n          this.setState({\n              ...this.state,\n              error: 'Connection error occured',\n          });\n          console.log('error', error);\n      });\n  }\n  handleUploadDeliveryDoc = () => {\n    let dataIndex = this.props.selectedRows.data[0]['dataIndex'];\n    let selectedRowData = this.props.originalData[dataIndex];\n    this.setState({\n        showEditModal:true,\n        id: selectedRowData.id,\n        bol : selectedRowData.bol,\n        is_delivered : selectedRowData.is_delivered,\n        xtoken:this.props.Xtoken,\n    });\n  }\n  handleAttachPayment = () => {\n    let dataIndex = this.props.selectedRows.data[0]['dataIndex'];\n    let selectedRowData = this.props.originalData[dataIndex];\n    this.setState({\n        showPayModal:true,\n        id: selectedRowData.id,\n        bol : selectedRowData.bol,\n        is_delivered : selectedRowData.is_delivered,\n        xtoken:this.props.Xtoken,\n    });\n  }\n  handleGoToEdit = () => {\n    let dataIndex = this.props.selectedRows.data[0]['dataIndex'];\n    let selectedRowData = this.props.originalData[dataIndex];\n    window.location.href = '/manage-loads/edit/' + selectedRowData.id;\n    /** got to path */\n  }\n  handleDeleteSelection = () => {\n    let dataIndex = this.props.selectedRows.data[0]['dataIndex'];\n    let selectedRowData = this.props.originalData[dataIndex];\n    deleteLoad(this.props.Xtoken, selectedRowData.id)\n    .then((response) => {\n      if(response.status === 200 )\n      {\n        alert(response.message);\n        this.props.rerenderParentCallback();\n        return;\n      }\n      alert(response.message);\n      return;\n    })\n    .catch((error) => {\n      alert('Connection error occured');\n    });\n  };\n\n  handleClickDeselectAll = () => {\n    this.props.setSelectedRows([]);\n  };\n  firstUpper = (str) => {\n    let string = str.toLowerCase();\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  handleClickBlockSelected = () => {\n    console.log(`block users with dataIndexes: ${this.props.selectedRows.data.map(row => row.dataIndex)}`);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.iconContainer}>\n\n        <Tooltip title={\"Attach Payment\"}>\n          <IconButton className={classes.iconButton} onClick={this.handleAttachPayment}>\n            <PaymentIcon className={classes.icon} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={\"Attach Delivery Docs\"}>\n          <IconButton className={classes.iconButton} onClick={this.handleUploadDeliveryDoc}>\n            <Attachment className={classes.icon} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={\"Modify Load\"}>\n          <IconButton className={classes.iconButton} onClick={this.handleGoToEdit}>\n            <EditIcon className={classes.icon} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={\"Deselect row\"}>\n          <IconButton className={classes.iconButton} onClick={this.handleClickDeselectAll}>\n            <IndeterminateCheckBoxIcon className={classes.icon} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={\"Drop row\"}>\n          <IconButton className={classes.iconButton} onClick={this.handleDeleteSelection}>\n            <DeleteIcon className={classes.icon} />\n          </IconButton>\n        </Tooltip>\n        {/* modals */}\n        <Modal\n          size=\"lg\"\n          isOpen={this.state.showEditModal}\n          backdrop={false}>\n          <ModalHeader>\n            Attach Signed Delivery Document\n            <br></br>\n            <small>This confirms that the Cargo was successfully delivered</small>\n            {this.state.error.length > 0 && (\n              <div>\n                <br></br><Alert color=\"danger\">{this.state.error}</Alert>\n              </div>\n            )}\n            {this.state.msg.length > 0 && (\n              <div>\n                <br></br><Alert color=\"success\">{this.state.msg}</Alert>\n              </div>\n            )}\n          </ModalHeader>\n          <ModalBody>\n            <Row>\n                <Col xl={6} lg={12} md={12}>\n                  <Card>\n                      <CardBody>\n                      <Form>\n                          <FormGroup>\n                          <Label for=\"exampleEmail\">Selected Load BOL*</Label>\n                          <Input readOnly type=\"text\" value={this.state.bol} name=\"bookdate\"/>\n                          </FormGroup>\n                      </Form>\n                      </CardBody>\n                  </Card>\n                </Col>\n                <Col xl={6} lg={12} md={12}>\n                  <Card>\n                      <CardBody>\n                      <Form>\n                          <FormGroup>\n                          <Label for=\"exampleEmail\">Upload file*</Label>\n                          <Input onChange={this.handleDocInput}\n                              type=\"file\" \n                              name=\"hjj\"\n                              placeholder=\"\"\n                          />\n                          </FormGroup>\n                      </Form>\n                      </CardBody>\n                  </Card>\n                </Col>\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.handleEditSaveChanges}>\n              Save changes\n            </Button>{' '}\n            <Button color=\"secondary\" onClick={this.hideEditModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n        \n        {/* attach payment modal */}\n\n        <Modal\n          size=\"lg\"\n          isOpen={this.state.showPayModal}\n          backdrop={false}>\n          <ModalHeader>\n            Mark Entry As Paid\n            <br></br>\n            <small>This confirms that the Cargo was successfully delivered and paid for</small>\n            {this.state.error.length > 0 && (\n              <div>\n                <br></br><Alert color=\"danger\">{this.state.error}</Alert>\n              </div>\n            )}\n            {this.state.msg.length > 0 && (\n              <div>\n                <br></br><Alert color=\"success\">{this.state.msg}</Alert>\n              </div>\n            )}\n          </ModalHeader>\n          <ModalBody>\n            <Row>\n                <Col xl={6} lg={12} md={12}>\n                  <Card>\n                      <CardBody>\n                      <Form>\n                          <FormGroup>\n                          <Label for=\"exampleEmail\">Selected Load BOL*</Label>\n                          <Input readOnly type=\"text\" value={this.state.bol} name=\"bookdate\"/>\n                          </FormGroup>\n                      </Form>\n                      </CardBody>\n                  </Card>\n                </Col>\n                <Col xl={6} lg={12} md={12}>\n                  <Card>\n                      <CardBody>\n                      <Form>\n                          <FormGroup>\n                            <Label for=\"exampleEmail\">Payment Status*</Label>\n                            <Input onChange={this.handlePayStatusInput} value={this.state.paid} defaultValue={this.state.paid} type=\"select\" name=\"stt\">\n                              <option value=\"nn\" disabled={true}>Select one</option>\n                              <option value=\"1\">Paid</option>\n                              <option value=\"2\">Awaiting Payment</option>\n                            </Input>\n                          </FormGroup>\n                      </Form>\n                      </CardBody>\n                  </Card>\n                </Col>\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.handlePaySaveChanges}>\n              Save changes\n            </Button>{' '}\n            <Button color=\"secondary\" onClick={this.hideEditModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(defaultToolbarSelectStyles, { name: \"CustomToolbarSelectLoads\" })(CustomToolbarSelectLoads);","import Page from 'components/Page';\nimport React from 'react';\nimport classnames from 'classnames';\nimport { Consumer } from \"../components/Context\";\nimport {\n  TabContent, \n  TabPane, \n  Nav, \n  NavItem, \n  NavLink, \n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormFeedback,\n  FormGroup,\n  FormText,\n  Input,\n  Label,\n  Row,\n  Alert,\n  Table,\n} from 'reactstrap';\nimport states from \"../api/states\";\nimport PageSpinner from 'components/PageSpinner';\nimport { findPricing, completePay } from \"../api/api\";\nimport AsyncStorage from '@callstack/async-storage';\nimport conf from \"../api/config\";\nimport MUIDataTable from \"mui-datatables\";\nimport CustomToolbarSelectLoads from \"../components/CustomToolbarSelectLoads\";\n\n/** stripe */\nimport {loadStripe} from '@stripe/stripe-js';\nimport {Elements, CardElement, ElementsConsumer} from '@stripe/react-stripe-js';\nconst stripePromise = loadStripe(conf.stripe_p_key);\n\n\nclass BillingPayPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab:'1',\n            cost : '',\n            validUntil : '',\n            group : '30',\n            xtoken:'',\n            msg: '',\n            error: '',\n            preload:false,\n        };\n        AsyncStorage.getItem(conf.secret)\n        .then((results) => {\n          if( results !== null )\n          {\n            let obje_results = JSON.parse(results);\n            findPricing(obje_results.user.token, {group: \"30\"})\n            .then((response) => {\n                this.setState({\n                    ...this.state, \n                    xtoken : obje_results.user.token,\n                    validUntil: response.data.end,\n                    cost: response.data.cost,\n                });\n            }).catch((error) => console.log(error));\n          }\n        })\n        .catch((error) => {\n          console.log('storage error', error);\n        });\n    }\n    componentDidMount() {\n    }\n\n    toggleTab = tab => {\n      if( this.state.activeTab !== tab)\n      {\n        this.setState({...this.state, activeTab: tab});\n      }\n    }\n    \n    firstUpper = (str) => {\n      let string = str.toLowerCase();\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    handleGroupInput = (event) => {\n      const v = event.target.value;\n      let postData = {group: v};\n      findPricing(this.state.xtoken, postData)\n      .then((response) => {\n        if(response.status === 200)\n        {\n            this.setState({\n                ...this.state, \n                group: v,\n                validUntil: response.data.end,\n                cost: response.data.cost,\n            });\n        }else\n        {\n            this.setState({\n                ...this.state,\n                group: v,\n                error: response.message,\n            });\n            return;\n        }\n      }).catch((error) => console.log(error));\n    }\n    handleSaveChanges = async () => {\n        \n    }\n    render() {\n      return (\n        <Consumer>\n        {context => (\n        <Page title=\"Upgrade Plan\" breadcrumbs={[{ name: 'Upgrade', active: true }]}>\n            <Card>\n              <CardBody>\n              <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: this.state.activeTab === '1' })}\n                  onClick={() => { this.toggleTab('1'); }}\n                >\n                  Upgrade Plan\n                </NavLink>\n              </NavItem>\n            </Nav>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                {/* New entry */}\n                <Row>\n                  <Col xl={12} lg={12} md={12}>\n                    <Row>\n                      <Col xl={12} lg={12} md={12}>\n                        <Card className=\"borderless\">\n                            {this.state.preload && (\n                              <CardHeader><PageSpinner/></CardHeader>\n                            )}\n                          {this.state.error.length > 0 && (\n                              <Alert color=\"danger\">{this.state.error}</Alert>\n                          )}\n                          {this.state.msg.length > 0 && (\n                              <Alert color=\"success\">{this.state.msg}</Alert>\n                          )}\n                        </Card>\n                      </Col>\n                    </Row>\n                    <Col xl={12} lg={12} md={12}>\n                            <Form>\n                                <FormGroup>\n                                    <Label className=\"pay-label\" for=\"exampleEmail\">Renewal Period*</Label>\n                                    <Input className={\"long-input\"} onChange={this.handleGroupInput} value={this.state.group} defaultValue={this.state.group} type=\"select\" name=\"sftate\">\n                                        <option value=\"nn\" disabled={true}>Select plan</option>\n                                        <option value=\"30\">Monthly</option>\n                                        <option value=\"90\">Quarterly</option>\n                                        <option value=\"180\">Semi-annually</option>\n                                        <option value=\"365\">Annually</option>\n                                    </Input>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label>Valid Until*</Label>\n                                    <Input readOnly type=\"date\" value={this.state.validUntil} name=\"fd\"/>\n                                    <br></br>\n                                    <Label><b>Cost ${this.state.cost}</b></Label>\n                                </FormGroup>\n                                <FormGroup>\n                                     <Label className=\"pay-label\" for=\"exampleEmail\">Payment details*</Label>\n                                     <div className={\"form-control long-input\"}>\n                                     <CardElement\n                                        options={{\n                                            style: {\n                                            base: {\n                                                fontSize: '16px',\n                                                backgroundColor:'#ffffff',\n                                                borderWidth:3,\n                                                borderColor:'#000000',\n                                                color: '#424770',\n                                                '::placeholder': {\n                                                color: '#aab7c4',\n                                                },\n                                            },\n                                            invalid: {\n                                                color: '#9e2146',\n                                            },\n                                            },\n                                        }}\n                                        />\n                                     </div>\n                                </FormGroup>\n                                <FormGroup check row>\n                                    <Col sm={{ size: 6, offset: 3 }}>\n                                        <Button type=\"button\" onClick={ async () => {\n                                            this.setState({\n                                                ...this.state,\n                                                preload:true,\n                                            })\n                                            let postData = {\n                                                cost: this.state.cost,\n                                                group: this.state.group,\n                                                payment_method: 0,\n                                            };\n                                            const {stripe, elements} = this.props;\n                                            if (!stripe || !elements) {\n                                                /** stripe not loaded */\n                                                return;\n                                            }\n                                            const cardElement = elements.getElement(CardElement);\n                                            const {error, paymentMethod} = await stripe.createPaymentMethod({\n                                                type: 'card',\n                                                card: cardElement,\n                                            });\n                                            if (error) {\n                                                console.log('[error]', error);\n                                                this.setState({...this.state, preload: false, error: 'Card Error. Stripe Could not verify your card information. Please use Visa or Mastercard', msg:\"\"});\n                                                return;\n                                            } else {\n                                                // console.log('[PaymentMethod]', paymentMethod);\n                                                let payment_method = paymentMethod.id;\n                                                postData.payment_method = payment_method;\n                                                completePay(this.state.xtoken, postData)\n                                                .then((response) => {\n                                                    if(response.status != 200 )\n                                                    {\n                                                        this.setState({\n                                                            ...this.state, \n                                                            preload: false, \n                                                            error: response.message, \n                                                            msg:\"\",\n                                                        });\n                                                        return;\n                                                    }\n                                                    let newstate = {\n                                                        user : response.data,\n                                                        is_logged_in : true,\n                                                    };\n                                                    AsyncStorage.setItem(conf.secret, JSON.stringify(newstate));\n                                                    context.switchStateHandler(newstate);\n                                                    // console.log('response', response);\n                                                    this.setState({\n                                                        ...this.state,  preload: false,  msg: response.message, error:\"\",\n                                                    });\n                                                    return;\n                                                })\n                                                .catch((errors) => {\n                                                    this.setState({\n                                                        ...this.state, \n                                                        preload: false, \n                                                        error: \"Connection error occured\", \n                                                        msg:\"\",\n                                                    });\n                                                    return;\n                                                });\n                                            }\n                                        }}>\n                                            Complete Payment\n                                        </Button>\n                                    </Col>\n                                </FormGroup>\n                            </Form>\n                          </Col> \n                  </Col>\n                </Row>\n                {/* end new entry */}\n              </TabPane>\n            </TabContent>\n              </CardBody>\n            </Card>\n        </Page>\n        )}\n        </Consumer>\n      );\n    }\n}\nconst InjectedSectionForm = () => {\n    return (\n      <ElementsConsumer>\n        {({elements, stripe}) => (\n          <BillingPayPage elements={elements} stripe={stripe} />\n        )}\n      </ElementsConsumer>\n    );\n  };\n  \n  const Section = () => {\n    return (\n        <React.Fragment>\n            <Elements stripe={stripePromise}>\n                <InjectedSectionForm />\n            </Elements>\n        </React.Fragment>\n    );\n  };\nexport default Section;\n"],"sourceRoot":""}