{"version":3,"sources":["components/Page.js","components/Typography.js","components/Widget/NumberWidget.js","components/Widget/DisplayWidget.js","components/Widget/IconWidget.js","utils/colors.js","pages/DashboardPage.js"],"names":["bem","bn","create","Page","_ref","title","breadcrumbs","Tag","tag","className","children","restProps","Object","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","type","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","process","length","map","_ref2","index","name","active","key","defaultProps","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","TypoComp","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classNames","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","NumberWidget","subtitle","number","color","_ref$progress","progress","value","label","objectWithoutProperties","react_default","Card","body","CardText","CardTitle","concat","Progress","style","height","DisplayWidget","IconWidget","bgColor","Icon","icon","iconProps","defineProperty","inverse","CardBody","size","CardSubtitle","getColor","availableColor","arguments","undefined","window","getComputedStyle","document","documentElement","getPropertyValue","DashboardPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","genRevenueLineData","input","moreData2","labels","extractSetMonthKeys","datasets","objectSpread","backgroundColor","borderColor","fill","borderWidth","data","extractSetRevValues","genTruckRevHoriBarData","extractSetKeys","hoverBackgroundColor","hoverBorderColor","extractSetValues","options","scales","xAxes","gridLines","yAxes","genDriverRevenueBarData","genFuelConsumptionLineData","genFuelMilesScatterData","fuelData","mileData","genFuelRevenueScatterData","revenueData","genFuelWeightScatterData","weightData","genBrokerLoadsCountHoriBarData","ticks","beginAtZero","dataset","keys","forEach","x","mkey","push","split","values","extractSetExpValues","genTopExpensePieData","set_lables","genLoadsByTruckPieData","slice","genTruckMileagePieData","state","visualizations","revexp","toptentrucks","driver_rev","fuel_cons","broker_loads","fuel_mile","fuel_rev","fuel_weight","has_reminders","is_near","reminders","xtoken","AsyncStorage","getItem","conf","secret","then","results","obje_results","JSON","parse","findDashboardMeta","user","token","response","setState","top_ten","console","log","catch","respError","findBillingStatus","parseInt","expired","location","href","er","error","scrollTo","_this2","Context","context","Row","Col","lg","md","sm","xs","has_setup","Alert","SourceLink","target","rem","idx","tlabel","xl","Widget_DisplayWidget","revenue","trucks","expenses","trips","CardHeader","es","f","m","r","w","React","Component"],"mappings":"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","file":"static/js/28.bbfe36e6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>{process.env.REACT_APP_NAME}</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Card, CardText, CardTitle, Progress } from 'reactstrap';\nimport Typography from '../Typography';\n\nconst NumberWidget = ({\n  title,\n  subtitle,\n  number,\n  color,\n  progress: { value, label },\n  ...restProps\n}) => {\n  return (\n    <Card body {...restProps}>\n      <div className=\"d-flex justify-content-between\">\n        <CardText tag=\"div\">\n          <Typography className=\"mb-0\">\n            <strong>{title}</strong>\n          </Typography>\n          <Typography className=\"mb-0 text-muted small\">{subtitle}</Typography>\n        </CardText>\n        <CardTitle className={`text-${color}`}>{number}</CardTitle>\n      </div>\n      <Progress value={value} color={color} style={{ height: '8px' }} />\n      <CardText tag=\"div\" className=\"d-flex justify-content-between\">\n        <Typography tag=\"span\" className=\"text-left text-muted small\">\n          {label}\n        </Typography>\n        <Typography tag=\"span\" className=\"text-right text-muted small\">\n          {value}%\n        </Typography>\n      </CardText>\n    </Card>\n  );\n};\n\nNumberWidget.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  number: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.number.isRequired,\n  ]),\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'light',\n    'dark',\n  ]),\n  progress: PropTypes.shape({\n    value: PropTypes.number,\n    label: PropTypes.string,\n  }),\n};\n\nNumberWidget.defaultProps = {\n  title: '',\n  subtitle: '',\n  number: 0,\n  color: 'primary',\n  progress: {\n    value: 0,\n    label: '',\n  },\n};\n\nexport default NumberWidget;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Card, CardText, CardTitle, Progress } from 'reactstrap';\nimport Typography from '../Typography';\n\nconst DisplayWidget = ({\n  title,\n  subtitle,\n  number,\n  color,\n  progress: { value, label },\n  ...restProps\n}) => {\n  return (\n    <Card body {...restProps}>\n      <div className=\"displaywidgetdiv justify-content-between\">\n        <CardText tag=\"div\">\n          <Typography className=\"mb-0 displaywidget\">\n            <strong className={\"displaywidgetTitle text-\" + color }>{number}</strong>\n            <br></br>\n            <small>{\"\" + title}</small>\n          </Typography>\n        </CardText>\n      </div>\n    </Card>\n  );\n};\n\nDisplayWidget.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  number: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.number.isRequired,\n  ]),\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'light',\n    'dark',\n  ]),\n  progress: PropTypes.shape({\n    value: PropTypes.number,\n    label: PropTypes.string,\n  }),\n};\n\nDisplayWidget.defaultProps = {\n  title: '',\n  subtitle: '',\n  number: 0,\n  color: 'primary',\n  progress: {\n    value: 0,\n    label: '',\n  },\n};\n\nexport default DisplayWidget;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport classNames from 'classnames';\n\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\n\nconst IconWidget = ({\n  bgColor,\n  icon: Icon,\n  iconProps,\n  title,\n  subtitle,\n  className,\n  ...restProps\n}) => {\n  const classes = classNames('cr-widget', className, {\n    [`bg-${bgColor}`]: bgColor,\n  });\n  return (\n    <Card inverse className={classes} {...restProps}>\n      <CardBody className=\"cr-widget__icon\">\n        <Icon size={50} {...iconProps} />\n      </CardBody>\n      <CardBody>\n        <CardTitle>{title}</CardTitle>\n        <CardSubtitle>{subtitle}</CardSubtitle>\n      </CardBody>\n    </Card>\n  );\n};\n\nIconWidget.propTypes = {\n  bgColor: PropTypes.string,\n  icon: PropTypes.component,\n  iconProps: PropTypes.object,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n};\n\nIconWidget.defaultProps = {\n  bgColor: 'primary',\n  icon: 'span',\n  iconProps: { size: 50 },\n};\n\nexport default IconWidget;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import Page from 'components/Page';\nimport { Consumer } from \"../components/Context\";\nimport { DisplayWidget } from 'components/Widget';\nimport React from 'react';\nimport SourceLink from 'components/SourceLink';\nimport { Pie, Doughnut, Bar, Line,Polar, HorizontalBar,Scatter, } from 'react-chartjs-2';\nimport { getColor } from 'utils/colors';\nimport { randomNum } from 'utils/demos';\nimport conf from \"../api/config\";\nimport { findDashboardMeta, findBillingStatus, } from \"../api/api\";\nimport AsyncStorage from '@callstack/async-storage';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Alert,\n} from 'reactstrap';\nconst rand = () => Math.round(Math.random() * 20 - 10)\n\nclass DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visualizations : [],\n      revexp:[],\n      toptentrucks:[],\n      driver_rev:[],\n      fuel_cons:[],\n      broker_loads:[],\n      fuel_mile:[],\n      fuel_rev:[],\n      fuel_weight:[],\n      has_reminders:'',\n      is_near:0,\n      reminders:[],\n      xtoken:'',\n    };\n    AsyncStorage.getItem(conf.secret)\n    .then((results) => {\n      if( results !== null )\n      {\n        let obje_results = JSON.parse(results);\n        findDashboardMeta(obje_results.user.token).then((response) => {\n            this.setState({\n                ...this.state,\n                xtoken : obje_results.user.token,\n                is_near: obje_results.user.is_near,\n                visualizations:response.data,\n                revexp:response.data.revexp,\n                toptentrucks:response.data.top_ten,\n                driver_rev:response.data.driver_rev,\n                fuel_cons:response.data.fuel_cons,\n                broker_loads:response.data.broker_loads,\n                fuel_mile:response.data.fuel_mile,\n                fuel_rev:response.data.fuel_rev,\n                fuel_weight:response.data.fuel_weight,\n                has_reminders:response.data.has_reminders,\n                reminders:response.data.reminders,\n            });\n            console.log('reminders data', response.data.reminders,);\n        }).catch((respError) => {\n          console.log('respError', respError);\n        });\n        findBillingStatus(obje_results.user.token).then((response) => {\n          if( parseInt(response.expired) === 1 )\n          {\n            window.location.href = '/bills/payment';\n          }\n        }).catch((er) => console.log(er));\n      }\n    })\n    .catch((error) => {\n      console.log('storage error', error);\n    });\n  }\n  genRevenueLineData = (input, moreData = {}, moreData2 = {}) => {\n    const MONTHS = this.extractSetMonthKeys(input);\n    return {\n      labels: MONTHS,\n      datasets: [\n        {\n          label: 'Revenue($)',\n          backgroundColor: getColor('secondary'),\n          borderColor: getColor('secondary'),\n          fill:false,\n          borderWidth: 1,\n          data: this.extractSetRevValues(input),\n          ...moreData2,\n        },\n      ],\n    };\n  };\n  genTruckRevHoriBarData = (input) => {\n    return { data: {\n          labels: this.extractSetKeys(input),\n          datasets: [\n            {\n              label: 'Truck revenue($)',\n              backgroundColor: getColor('secondary'),\n              borderColor: getColor('secondary'),\n              borderWidth: 1,\n              hoverBackgroundColor: getColor('secondary'),\n              hoverBorderColor: getColor('secondary'),\n              data: this.extractSetValues(input),\n            }\n          ]\n        },\n        options: {\n          scales: {\n            xAxes: [{\n                gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\",\n                }\n            }],\n            yAxes: [{\n                gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\",\n                }   \n            }]\n          }\n        }\n      };\n  };\n  genDriverRevenueBarData = (input) => {\n    return {\n      labels: this.extractSetKeys(input),\n      datasets: [\n        {\n          label: 'Driver revenue',\n          data: this.extractSetValues(input),\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)',\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n          ],\n          borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)',\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n          ],\n          borderWidth: 1,\n        },\n      ],\n    }\n  }\n  genFuelConsumptionLineData = (input, moreData = {}, moreData2 = {}) => {\n    const MONTHS = this.extractSetMonthKeys(input);\n    return {\n      labels: MONTHS,\n      datasets: [\n        {\n          label: 'Consumption($)',\n          backgroundColor: getColor('secondary'),\n          borderColor: getColor('secondary'),\n          fill:false,\n          borderWidth: 1,\n          data: this.extractSetRevValues(input),\n          ...moreData2,\n        },\n      ],\n    };\n  };\n  genFuelMilesScatterData = (fuelData, mileData) => {\n    return {\n      datasets: [\n        {\n          label: 'Fuel',\n          data: fuelData,\n          backgroundColor: getColor('secondary'),\n        },\n        {\n          label: 'Miles',\n          data: mileData,\n          backgroundColor: getColor('success'),\n        },\n      ],\n    }\n  }\n  genFuelRevenueScatterData = (fuelData, revenueData) => {\n    return {\n      datasets: [\n        {\n          label: 'Fuel',\n          data: fuelData,\n          backgroundColor: getColor('secondary'),\n        },\n        {\n          label: 'Revenue',\n          data: revenueData,\n          backgroundColor: getColor('danger'),\n        },\n      ],\n    }\n  }\n  genFuelWeightScatterData = (fuelData, weightData) => {\n    return {\n      datasets: [\n        {\n          label: 'Fuel',\n          data: fuelData,\n          backgroundColor: getColor('warning'),\n        },\n        {\n          label: 'Weight',\n          data: weightData,\n          backgroundColor: getColor('primary'),\n        },\n      ],\n    }\n  }\n  genBrokerLoadsCountHoriBarData = (input) => {\n    return { data: {\n          labels: this.extractSetKeys(input),\n          datasets: [\n            {\n              label: 'Load count',\n              backgroundColor: getColor('primary'),\n              borderColor: getColor('primary'),\n              borderWidth: 1,\n              hoverBackgroundColor: getColor('primary'),\n              hoverBorderColor: getColor('primary'),\n              data: this.extractSetValues(input),\n            }\n          ]\n        },\n        options: {\n          scales: {\n            xAxes: [{\n                gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\",\n                },\n                ticks: {\n                  beginAtZero: true,\n                },\n            }],\n            yAxes: [{\n                gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\",\n                }   \n            }]\n          }\n        }\n      };\n  };\n  extractSetMonthKeys = (dataset) => {\n    let keys = [];\n    dataset.forEach( function(x){\n      let mkey = Object.keys(x)[0];\n      keys.push(mkey.split('~')[1]);\n    });\n    return keys;\n  }\n  extractSetRevValues = (dataset) => {\n    let keys = [];\n    dataset.forEach( function(x){\n      let mkey = Object.values(x)[0];\n      keys.push(mkey.split('~')[0]);\n    });\n    return keys;\n  }\n  extractSetExpValues = (dataset) => {\n    let keys = [];\n    dataset.forEach( function(x){\n      let mkey = Object.values(x)[0];\n      keys.push(mkey.split('~')[1]);\n    });\n    return keys;\n  }\n  extractSetKeys = (dataset) => {\n    let keys = [];\n    dataset.forEach( function(x){\n      keys.push(Object.keys(x)[0])\n    });\n    return keys;\n  }\n  extractSetValues = (dataset) => {\n    let values = [];\n    dataset.forEach( function(x){\n      values.push(Object.values(x)[0])\n    });\n    return values;\n  }\n  \n  genTopExpensePieData = (input) => {\n    let set_lables = this.extractSetKeys(input);\n    return {\n      datasets: [\n        {\n          data: this.extractSetValues(input),\n          backgroundColor: [\n            getColor('primary'),\n            getColor('secondary'),\n            getColor('success'),\n            getColor('info'),\n            getColor('danger'),\n          ],\n          label: set_lables[0],\n        },\n      ],\n      labels: set_lables,\n    };\n  };\n  \n  genLoadsByTruckPieData = (input) => {\n    let set_lables = this.extractSetKeys(input);\n    return {\n      datasets: [\n        {\n          data: this.extractSetValues(input).slice(0, 5),\n          backgroundColor: [\n            getColor('primary'),\n            getColor('secondary'),\n            getColor('success'),\n            getColor('info'),\n            getColor('danger'),\n          ],\n          label: set_lables[0],\n        },\n      ],\n      labels: set_lables.slice(0, 5),\n    };\n  };\n  \n  genTruckMileagePieData = (input) => {\n    let set_lables = this.extractSetKeys(input);\n    return {\n      datasets: [\n        {\n          data: this.extractSetValues(input).slice(0, 5),\n          backgroundColor: [\n            getColor('primary'),\n            getColor('secondary'),\n            getColor('success'),\n            getColor('info'),\n            getColor('danger'),\n          ],\n          label: set_lables[0],\n        },\n      ],\n      labels: set_lables.slice(0, 5),\n    };\n  };\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    const primaryColor = getColor('primary');\n    const secondaryColor = getColor('secondary');\n    return (\n      <Consumer>\n        {context => (\n          <Page\n            className=\"DashboardPage\"\n            title={process.env.REACT_APP_NAME}\n            breadcrumbs={[{ name: 'Dashboard', active: true }]}\n          >\n            \n            <Row>\n              <Col lg={12} md={12} sm={12} xs={12}>\n                {parseInt(context.state.user.has_setup) === 0 && (\n                  <Alert color=\"danger\">You have not completed your <b>{process.env.REACT_APP_NAME}</b> system setup. \n                    <SourceLink target=\"_self\" href=\"/co/setup\">\n                    {\" \"} Complete setup\n                    </SourceLink>\n                  </Alert>\n                )}\n\n                {parseInt(this.state.is_near) === 1 && (\n                  <Alert color=\"danger\">Your account is almost \n                    <SourceLink target=\"_self\" href=\"/bills/billing\">\n                    {\" \"} <b>expiring</b>\n                    </SourceLink>.\n                    {\" \"} To avoid service disruption \n                    <SourceLink target=\"_self\" href=\"/bills/payment\">\n                    {\" \"} <b>Upgrade now</b>\n                    </SourceLink>\n                  </Alert>\n                )}\n              </Col>\n            </Row>\n            {parseInt(this.state.has_reminders) === 1 && (\n            <Row>\n              <Col lg={12} md={12} sm={12} xs={12}>\n                  <Alert color=\"danger\">\n                    <b>System Notifications</b> <br></br>\n                    <p>The following trucks have got expired documents</p>\n                    <ul>\n                    { this.state.reminders.map((rem, idx) => (\n                      <li>{rem.tlabel}</li>\n                    ))}\n                    </ul>\n                  </Alert>\n              </Col>\n            </Row>\n            )}\n\n            <Row>\n              <Col className=\"small-padding\" xl={3} md={6} sm={12} xs={12}>\n                <DisplayWidget\n                  title=\"Monthily revenue\"\n                  number={this.state.visualizations.revenue}\n                  color=\"secondary\"\n                />\n              </Col>\n              <Col className=\"small-padding\" xl={3} md={6} sm={12} xs={12}>\n                <DisplayWidget\n                  title=\"Trucks\"\n                  number={this.state.visualizations.trucks}\n                  color=\"danger\"\n                />\n              </Col>\n              <Col className=\"small-padding\" xl={3} md={6} sm={12} xs={12}>\n                <DisplayWidget\n                  title=\"Monthily expenses\"\n                  number={this.state.visualizations.expenses}\n                  color=\"primary\"\n                />\n              </Col>\n              <Col className=\"small-padding\" xl={3} md={6} sm={12} xs={12}>\n                <DisplayWidget\n                  title=\"Trips\"\n                  number={this.state.visualizations.trips}\n                  color=\"success\"\n                />\n              </Col>\n            </Row>\n            <br></br>\n            <Row>\n            <Col xl={6} lg={12} md={12}>\n                <Card>\n                  <CardHeader className=\"text-secondary\">Revenue</CardHeader>\n                  <CardBody>\n                    <Line data={this.genRevenueLineData(this.state.revexp, { type: 'line', fill: false })} />\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col xl={6} lg={12} md={12}>\n                <Card>\n                  <CardHeader className=\"text-primary\">Truck revenue</CardHeader>\n                  <CardBody>\n                    <HorizontalBar data={this.genTruckRevHoriBarData(this.state.toptentrucks).data} options={this.genTruckRevHoriBarData(this.state.toptentrucks).options} />\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col xl={6} lg={12} md={12}>\n                <Card>\n                  <CardHeader className=\"text-primary\">Driver revenue</CardHeader>\n                  <CardBody>\n                    <Bar data={this.genDriverRevenueBarData(this.state.driver_rev)}/>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col xl={6} lg={12} md={12}>\n                <Card>\n                  <CardHeader className=\"text-primary\">Fuel Consumption</CardHeader>\n                  <CardBody>\n                    <Line data={this.genFuelConsumptionLineData(this.state.fuel_cons, { type: 'line', fill: false })} />\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col xl={6} lg={12} md={12}>\n                <Card>\n                  <CardHeader className=\"text-primary\">Fuel vs Miles</CardHeader>\n                  <CardBody>\n                    <Scatter data={this.genFuelMilesScatterData(this.state.fuel_mile.f, this.state.fuel_mile.m)} />\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col xl={6} lg={12} md={12}>\n                <Card>\n                  <CardHeader className=\"text-primary\">Fuel vs Revenue</CardHeader>\n                  <CardBody>\n                    <Scatter data={this.genFuelRevenueScatterData(this.state.fuel_rev.f, this.state.fuel_rev.r)} />\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col xl={6} lg={12} md={12}>\n                <Card>\n                  <CardHeader className=\"text-primary\">Fuel vs Weight</CardHeader>\n                  <CardBody>\n                    <Scatter data={this.genFuelWeightScatterData(this.state.fuel_weight.f, this.state.fuel_weight.w)} />\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col xl={6} lg={12} md={12}>\n                <Card>\n                  <CardHeader className=\"text-secondary\">Count of Loads by Broker</CardHeader>\n                  <CardBody>\n                    <HorizontalBar data={this.genBrokerLoadsCountHoriBarData(this.state.broker_loads).data} options={this.genBrokerLoadsCountHoriBarData(this.state.broker_loads).options} />\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </Page>\n          )}\n      </Consumer>\n    );\n  }\n}\nexport default DashboardPage;\n"],"sourceRoot":""}