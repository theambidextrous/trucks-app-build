{"version":3,"sources":["pages/TrucksPage.js"],"names":["FormPage","props","_this","Object","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","rerenderParentCallback","findTrucks","state","xtoken","then","response","setState","_Users_softbucketio_projects_blueTrux_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","data","catch","respError","handleNumberInput","event","v","target","value","number","handleOwnerInput","owner","handleMakeInput","make","handleVinInput","vin","handleInsExpInput","insurance_expires","handleInspeExpInput","inspection_expires","handleRegExpInput","registration_expires","handleSaveChanges","preload","newTruck","status","msg","message","error","forceUpdate","console","log","downloadFile","owners","AsyncStorage","getItem","conf","secret","results","obje_results","JSON","parse","user","token","findBillingStatus","parseInt","expired","window","location","href","er","findOwners","ownerResponse","ownerRespError","_this2","options","filter","selectableRows","selectableRowsOnClick","filterType","responsive","draggableColumns","enabled","rowsPerPage","selectToolbarPlacement","customToolbarSelect","selectedRows","displayData","setSelectedRows","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_components_CustomToolbarSelectTrucks__WEBPACK_IMPORTED_MODULE_24__","originalData","Xtoken","downloadOptions","filename","separator","filterOptions","useDisplayedColumnsOnly","useDisplayedRowsOnly","onDownload","buildHead","buildBody","columns","data2","concat","trim","onRowSelectionChange","currentRowsSelected","allRows","rowsSelected","onRowsDelete","rowsDeleted","onChangePage","numberRows","onSearchChange","searchText","onColumnSortChange","column","direction","onViewColumnsChange","action","onFilterChange","filters","onCellClick","cellIndex","rowIndex","onRowClick","rowData","rowState","components_Page__WEBPACK_IMPORTED_MODULE_6__","title","breadcrumbs","name","active","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","xl","lg","md","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","components_PageSpinner__WEBPACK_IMPORTED_MODULE_23__","length","reactstrap__WEBPACK_IMPORTED_MODULE_12__","color","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","for","reactstrap__WEBPACK_IMPORTED_MODULE_17__","onChange","type","placeholder","defaultValue","disabled","map","stt","idx","key","id","company","check","row","sm","size","offset","reactstrap__WEBPACK_IMPORTED_MODULE_18__","onClick","mui_datatables__WEBPACK_IMPORTED_MODULE_22___default","item","display","React","Component"],"mappings":"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","file":"static/js/33.360cfdde.chunk.js","sourcesContent":["import Page from 'components/Page';\nimport React from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormFeedback,\n  FormGroup,\n  FormText,\n  Input,\n  Label,\n  Row,\n  Alert,\n  Table,\n} from 'reactstrap';\nimport { newTruck, findTrucks, findOwners, findBillingStatus} from \"../api/api\";\nimport AsyncStorage from '@callstack/async-storage';\nimport conf from \"../api/config\";\nimport MUIDataTable from \"mui-datatables\";\nimport PageSpinner from 'components/PageSpinner';\nimport CustomToolbarSelectTrucks from \"../components/CustomToolbarSelectTrucks\";\nclass FormPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          number : '',\n          owner : 'nn',\n          make : '',\n          vin : '',\n          insurance_expires:'',\n          inspection_expires:'',\n          registration_expires:'',\n          xtoken:'',\n          msg: '',\n          error: '',\n          downloadFile:true,\n          preload:false,\n          data: [],\n          owners:[],\n        };\n        AsyncStorage.getItem(conf.secret)\n        .then((results) => {\n          if( results !== null )\n          {\n            let obje_results = JSON.parse(results);\n            this.setState({\n              ...this.state,\n              xtoken : obje_results.user.token,\n            });\n            findBillingStatus(obje_results.user.token).then((response) => {\n              if( parseInt(response.expired) === 1 )\n              {\n                window.location.href = '/bills/payment';\n              }\n            }).catch((er) => console.log(er));\n            findTrucks(obje_results.user.token).then((response) => {\n                this.setState({\n                    ...this.state,\n                    data:response.data,\n                });\n            }).catch((respError) => {});\n\n            findOwners(obje_results.user.token).then((ownerResponse) => {\n              this.setState({\n                  ...this.state,\n                  owners:ownerResponse.data,\n              });\n            }).catch((ownerRespError) => {});\n\n          }\n        })\n        .catch((error) => {\n          console.log('storage error', error);\n        });\n    }\n    componentDidMount() {\n    }\n\n    rerenderParentCallback = () => {\n      findTrucks(this.state.xtoken).then((response) => {\n        this.setState({\n            ...this.state,\n            data:response.data,\n        });\n      }).catch((respError) => {\n      });\n    }\n    \n    handleNumberInput = (event) => {\n      const v = event.target.value;\n      this.setState({...this.state, number: v,});\n    }\n    handleOwnerInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, owner: v,});\n    }\n    handleMakeInput = (event) => {\n      const v = event.target.value;\n      this.setState({...this.state, make: v,});\n    }\n    handleVinInput = (event) => {\n        const v = event.target.value;\n        this.setState({...this.state, vin: v,});\n    }\n    handleInsExpInput = (event) => {\n      const v = event.target.value;\n      this.setState({...this.state, insurance_expires: v,});\n    }\n    handleInspeExpInput = (event) => {\n      const v = event.target.value;\n      this.setState({...this.state, inspection_expires: v,});\n    }\n    handleRegExpInput = (event) => {\n      const v = event.target.value;\n      this.setState({...this.state, registration_expires: v,});\n    }\n    handleSaveChanges = () => {\n        // console.log('so far', this.state);\n        this.setState({...this.state, preload:true,});\n        newTruck(this.state.xtoken, this.state)\n        .then((response) => {\n            if( response.status === 200)\n            {\n                this.setState({\n                    ...this.state,\n                    number : '',\n                    owner : 'nn',\n                    make : '',\n                    vin : '',\n                    insurance_expires:'',\n                    inspection_expires:'',\n                    registration_expires:'',\n                    msg: response.message,\n                    data: response.data,\n                    error: '',\n                    preload:false,\n                });\n                this.forceUpdate();\n            }\n            else\n            {\n                this.setState({\n                    ...this.state,\n                    error: response.message,\n                    msg: '',\n                    preload:false,\n                });\n            }\n        })\n        .catch((error) => {\n            this.setState({\n                ...this.state,\n                error: 'Connection error occured',\n                preload:false,\n            });\n            console.log('error', error);\n        });\n    }\n    render() {\n        const columns = [\n            {\n              name: 'Id',\n              options: {\n                display: true\n              }\n            },\n            {\n              name: 'Oid',\n              options: {\n                display: false\n              }\n            },\n            'Truck No.',\n            'Truck Owner',\n            'Truck Make',\n            'Truck VIN',\n            'Insurance Expiry',\n            'Inspection Expiry',\n            'Registration Expiry',\n        ];\n\n        const data2 = () => {\n          let rtn = [];\n          this.state.data.map(item => {\n            rtn.push([\n              item.id,\n              item.owner,\n              item.number,\n              item.company,\n              item.make,\n              item.vin,\n              item.insurance_expires,\n              item.inspection_expires,\n              item.registration_expires,\n            ]);\n          });\n          return rtn;\n        }\n      \n        const options = {\n            filter: true,\n            selectableRows: 'single',\n            selectableRowsOnClick:true,\n            filterType: 'dropdown',\n            responsive: 'vertical',\n            draggableColumns: {\n              enabled: true\n            },\n            rowsPerPage: 5,\n            selectToolbarPlacement: 'replace',\n            customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\n              <CustomToolbarSelectTrucks rerenderParentCallback={this.rerenderParentCallback} selectedRows={selectedRows} displayData={displayData} setSelectedRows={setSelectedRows}  originalData={this.state.data} Xtoken={this.state.xtoken}/>\n            ),\n            downloadOptions: {\n                filename: 'trucks-excel-format.csv',\n                separator: ';',\n                filterOptions: {\n                  useDisplayedColumnsOnly: true,\n                  useDisplayedRowsOnly: true,\n                }\n            },\n            onDownload: (buildHead, buildBody, columns, data2) => {\n              if (this.state.downloadFile) {\n                let val= `${buildHead(columns)}${buildBody(data2)}`.trim();\n                return val;\n              }\n      \n              return false;\n            },\n            onRowSelectionChange: (currentRowsSelected, allRows, rowsSelected) => {\n              // console.log('currentRowsSelected', currentRowsSelected);\n            },\n            onRowsDelete: rowsDeleted => {\n              // console.log(rowsDeleted, 'were deleted!');\n            },\n            onChangePage: numberRows => {\n              // console.log(numberRows);\n            },\n            onSearchChange: searchText => {\n              // console.log(searchText);\n            },\n            onColumnSortChange: (column, direction) => {\n              // console.log(column, direction);\n            },\n            onViewColumnsChange: (column, action) => {\n              // console.log(column, action);\n            },\n            onFilterChange: (column, filters) => {\n              // console.log(column, filters);\n            },\n            onCellClick: (cellIndex, rowIndex) => {\n              // console.log(cellIndex, rowIndex);\n            },\n            onRowClick: (rowData, rowState) => {\n              // console.log(rowData, rowState);\n            },\n        };\n      return (\n        <Page title=\"Trucks\" breadcrumbs={[{ name: 'Trucks', active: true }]}>\n          <Row>\n            <Col xl={12} lg={12} md={12}>\n              <Card>\n                <CardHeader>Create Truck</CardHeader>\n                {this.state.preload && (\n                  <PageSpinner/>\n                )}\n                {this.state.error.length > 0 && (\n                    <Alert color=\"danger\">{this.state.error}</Alert>\n                )}\n                {this.state.msg.length > 0 && (\n                    <Alert color=\"success\">{this.state.msg}</Alert>\n                )}\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xl={4} lg={12} md={12}>\n              <Card>\n                <CardBody>\n                  <Form>\n                    <FormGroup>\n                      <Label for=\"exampleEmail\">Truck Reg. Number*</Label>\n                      <Input onChange={this.handleNumberInput}\n                        type=\"text\" \n                        value={this.state.number}\n                        name=\"number\"\n                        placeholder=\"\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"exampleEmail\">Truck Owner*</Label>\n                      <Input onChange={this.handleOwnerInput} value={this.state.owner} defaultValue={this.state.owner} type=\"select\" name=\"owner\">\n                        <option value=\"nn\" disabled={true}>Select owner</option>\n                        {\n                          this.state.owners.map((stt, idx) => (\n                            <option key={idx} value={stt.id}>{stt.company}</option>\n                          ))\n                        }\n                      </Input>\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"exampleEmail\">Truck Make*</Label>\n                      <Input onChange={this.handleMakeInput}\n                        type=\"text\" \n                        value={this.state.make}\n                        name=\"make\"\n                        placeholder=\"\"\n                      />\n                    </FormGroup>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl={4} lg={12} md={12}>\n              <Card>\n                <CardBody>\n                  <Form>\n                    <FormGroup>\n                      <Label for=\"examplePassword\">Truck VIN*</Label>\n                      <Input onChange={this.handleVinInput}\n                        type=\"text\"\n                        value={this.state.vin}\n                        name=\"vin\"\n                        placeholder=\"\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"exampleEmail\">Insurance Expiry*</Label>\n                      <Input onChange={this.handleInsExpInput}\n                        type=\"date\" \n                        value={this.state.insurance_expires}\n                        name=\"make\"\n                        placeholder=\"\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"exampleEmail\">Inspection Expiry*</Label>\n                      <Input onChange={this.handleInspeExpInput}\n                        type=\"date\" \n                        value={this.state.inspection_expires}\n                        name=\"make\"\n                        placeholder=\"\"\n                      />\n                    </FormGroup>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xl={4} lg={12} md={12}>\n              <Card>\n                <CardBody>\n                  <Form>\n                    <FormGroup>\n                      <Label for=\"exampleEmail\">Registration Expiry*</Label>\n                      <Input onChange={this.handleRegExpInput}\n                        type=\"date\" \n                        value={this.state.registration_expires}\n                        name=\"make\"\n                        placeholder=\"\"\n                      />\n                    </FormGroup>\n                    <FormGroup check row>\n                      <Col sm={{ size: 10, offset: 2 }}>\n                        <Button type=\"button\" onClick={this.handleSaveChanges}>Add truck</Button>\n                      </Col>\n                    </FormGroup>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xl={12} lg={12} md={12}>\n              <Card>\n                <CardBody>\n                    <MUIDataTable title={'Trucks'}\n                    data={this.state.data.map(item => {\n                      return [\n                        item.id,\n                        item.owner,\n                        item.number,\n                        item.company,\n                        item.make,\n                        item.vin,\n                        item.insurance_expires,\n                        item.inspection_expires,\n                        item.registration_expires,\n                      ]\n                    })} columns={columns} options={options} />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n    \n        </Page>\n      );\n    }\n}\nexport default FormPage;\n"],"sourceRoot":""}